{
    "sourceFile": "src/cashier/UserList.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1751624804518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1751626696083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,42 +1,246 @@\n import React, { useEffect, useState } from \"react\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+import { FaEye, FaSearch, FaFilter } from \"react-icons/fa\";\r\n+\r\n const API = import.meta.env.VITE_AUTH_API_URL;\r\n \r\n const UserList = () => {\r\n   const [users, setUsers] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [filter, setFilter] = useState({\r\n+    username: \"\",\r\n+    email: \"\",\r\n+    role: \"\",\r\n+    status: \"\",\r\n+  });\r\n+  const [showFilters, setShowFilters] = useState(false);\r\n   const token = localStorage.getItem(\"token\");\r\n+  const navigate = useNavigate();\r\n \r\n+  const fetchUsers = async () => {\r\n+    setLoading(true);\r\n+    try {\r\n+      const params = new URLSearchParams();\r\n+      Object.entries(filter).forEach(([k, v]) => v && params.append(k, v));\r\n+\r\n+      const res = await fetch(\r\n+        `${API}/cashier/users?${params.toString()}`,\r\n+        {\r\n+          headers: { Authorization: `Bearer ${token}` },\r\n+        }\r\n+      );\r\n+      const data = await res.json();\r\n+      setUsers(data.users || []);\r\n+    } catch (error) {\r\n+      console.error(\"Error fetching users:\", error);\r\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n+\r\n   useEffect(() => {\r\n-    fetch(`${API}/cashier/users`, {\r\n-      headers: { Authorization: `Bearer ${token}` },\r\n-    })\r\n-      .then(res => res.json())\r\n-      .then(data => setUsers(data.users || []));\r\n+    fetchUsers();\r\n   }, []);\r\n \r\n+  const handleFilterChange = (e) =>\r\n+    setFilter({ ...filter, [e.target.name]: e.target.value });\r\n+\r\n+  const handleFilterSubmit = (e) => {\r\n+    e.preventDefault();\r\n+    fetchUsers();\r\n+  };\r\n+\r\n+  const clearFilters = () => {\r\n+    setFilter({\r\n+      username: \"\",\r\n+      email: \"\",\r\n+      role: \"\",\r\n+      status: \"\",\r\n+    });\r\n+    fetchUsers();\r\n+  };\r\n+\r\n+  const getStatusBadge = (blocked) => {\r\n+    return blocked ? \"bg-red-100 text-red-800\" : \"bg-green-100 text-green-800\";\r\n+  };\r\n+\r\n+  const getRoleBadge = (role) => {\r\n+    const roleConfig = {\r\n+      admin: \"bg-purple-100 text-purple-800\",\r\n+      cashier: \"bg-blue-100 text-blue-800\",\r\n+      user: \"bg-gray-100 text-gray-800\",\r\n+    };\r\n+    return roleConfig[role] || \"bg-gray-100 text-gray-800\";\r\n+  };\r\n+\r\n   return (\r\n-    <div>\r\n-      <h1 className=\"text-2xl font-bold mb-6\">Users</h1>\r\n-      <table className=\"w-full border\">\r\n-        <thead>\r\n-          <tr>\r\n-            <th className=\"border px-2 py-1\">Username</th>\r\n-            <th className=\"border px-2 py-1\">Email</th>\r\n-            <th className=\"border px-2 py-1\">Role</th>\r\n-            <th className=\"border px-2 py-1\">Status</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {users.map(u => (\r\n-            <tr key={u._id}>\r\n-              <td className=\"border px-2 py-1\">{u.username}</td>\r\n-              <td className=\"border px-2 py-1\">{u.email}</td>\r\n-              <td className=\"border px-2 py-1\">{u.role}</td>\r\n-              <td className=\"border px-2 py-1\">{u.blocked ? \"Blocked\" : \"Active\"}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n+    <div className=\"p-6\">\r\n+      <div className=\"bg-gradient-to-br from-indigo-400 via-purple-400 to-pink-400 text-white rounded-3xl p-6 sm:p-8 mb-8 sm:mb-10 shadow-lg\">\r\n+        <h1 className=\"text-3xl sm:text-5xl font-black tracking-tight drop-shadow-lg\">ðŸ‘¥ Users</h1>\r\n+        <p className=\"text-base sm:text-xl mt-2 opacity-90\">View all registered users</p>\r\n+      </div>\r\n+\r\n+      <div className=\"bg-white p-6 sm:p-8 rounded-3xl shadow-2xl space-y-8 transition-all duration-300 hover:shadow-[0_20px_50px_rgba(8,_112,_184,_0.7)]\">\r\n+\r\n+        <div className=\"flex flex-col md:flex-row md:items-center justify-between gap-4\">\r\n+          <div className=\"flex flex-col sm:flex-row items-start sm:items-center gap-3 sm:gap-4\">\r\n+            <button\r\n+              onClick={() => setShowFilters(!showFilters)}\r\n+              className=\"flex items-center gap-2 bg-gradient-to-r from-purple-600 to-purple-700 hover:from-purple-700 hover:to-purple-800 text-white px-6 py-3 rounded-xl transition-all duration-300 shadow-lg\"\r\n+            >\r\n+              <FaFilter />\r\n+              {showFilters ? \"Hide Filters\" : \"Show Filters\"}\r\n+            </button>\r\n+            <button\r\n+              onClick={fetchUsers}\r\n+              className=\"flex items-center gap-2 bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white px-6 py-3 rounded-xl transition-all duration-300 shadow-lg\"\r\n+            >\r\n+              <FaSearch />\r\n+              Refresh\r\n+            </button>\r\n+          </div>\r\n+\r\n+          <div className=\"text-left sm:text-right\">\r\n+            <p className=\"text-lg font-semibold text-gray-700\">\r\n+              Total Users: <span className=\"text-purple-600\">{users.length}</span>\r\n+            </p>\r\n+            <p className=\"text-sm text-gray-500\">\r\n+              Active Users: <span className=\"text-green-600 font-semibold\">\r\n+                {users.filter(user => !user.blocked).length}\r\n+              </span>\r\n+            </p>\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {showFilters && (\r\n+          <form onSubmit={handleFilterSubmit} className=\"bg-gray-50 p-6 rounded-2xl space-y-6\">\r\n+            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n+              {[\r\n+                { label: \"Username\", name: \"username\", type: \"text\", placeholder: \"Search by Username\" },\r\n+                { label: \"Email\", name: \"email\", type: \"email\", placeholder: \"Search by Email\" },\r\n+              ].map(({ label, name, type, placeholder }) => (\r\n+                <div key={name}>\r\n+                  <label className=\"block text-gray-700 font-medium mb-2\">{label}</label>\r\n+                  <input\r\n+                    name={name}\r\n+                    type={type}\r\n+                    placeholder={placeholder}\r\n+                    value={filter[name]}\r\n+                    onChange={handleFilterChange}\r\n+                    className=\"border border-gray-300 bg-white p-3 rounded-xl w-full focus:outline-none focus:ring-2 focus:ring-purple-400\"\r\n+                  />\r\n+                </div>\r\n+              ))}\r\n+              <div>\r\n+                <label className=\"block text-gray-700 font-medium mb-2\">Role</label>\r\n+                <select\r\n+                  name=\"role\"\r\n+                  value={filter.role}\r\n+                  onChange={handleFilterChange}\r\n+                  className=\"border border-gray-300 bg-white p-3 rounded-xl w-full focus:outline-none focus:ring-2 focus:ring-purple-400\"\r\n+                >\r\n+                  <option value=\"\">All Roles</option>\r\n+                  <option value=\"user\">User</option>\r\n+                  <option value=\"admin\">Admin</option>\r\n+                  <option value=\"cashier\">Cashier</option>\r\n+                </select>\r\n+              </div>\r\n+              <div>\r\n+                <label className=\"block text-gray-700 font-medium mb-2\">Status</label>\r\n+                <select\r\n+                  name=\"status\"\r\n+                  value={filter.status}\r\n+                  onChange={handleFilterChange}\r\n+                  className=\"border border-gray-300 bg-white p-3 rounded-xl w-full focus:outline-none focus:ring-2 focus:ring-purple-400\"\r\n+                >\r\n+                  <option value=\"\">All Status</option>\r\n+                  <option value=\"active\">Active</option>\r\n+                  <option value=\"blocked\">Blocked</option>\r\n+                </select>\r\n+              </div>\r\n+            </div>\r\n+\r\n+            <div className=\"flex flex-col sm:flex-row gap-4 justify-end\">\r\n+              <button\r\n+                type=\"button\"\r\n+                onClick={clearFilters}\r\n+                className=\"bg-gray-200 hover:bg-gray-300 px-6 py-3 rounded-xl transition-all duration-300\"\r\n+              >\r\n+                Clear Filters\r\n+              </button>\r\n+              <button\r\n+                type=\"submit\"\r\n+                className=\"bg-gradient-to-r from-purple-600 to-purple-700 hover:from-purple-700 hover:to-purple-800 text-white px-6 py-3 rounded-xl transition-all duration-300 shadow-lg\"\r\n+              >\r\n+                Apply Filters\r\n+              </button>\r\n+            </div>\r\n+          </form>\r\n+        )}\r\n+\r\n+        <div className=\"overflow-x-auto rounded-2xl\">\r\n+          {loading ? (\r\n+            <div className=\"text-center py-12\">\r\n+              <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-purple-600 mx-auto\"></div>\r\n+              <p className=\"mt-4 text-gray-600 text-sm sm:text-base\">Loading users...</p>\r\n+            </div>\r\n+          ) : users.length === 0 ? (\r\n+            <div className=\"text-center py-12\">\r\n+              <div className=\"text-6xl mb-4\">ðŸ‘¥</div>\r\n+              <p className=\"text-lg sm:text-xl text-gray-600\">No users found</p>\r\n+              <p className=\"text-gray-500 text-sm\">Try adjusting your filters or check back later</p>\r\n+            </div>\r\n+          ) : (\r\n+            <table className=\"min-w-full\">\r\n+              <thead className=\"bg-gradient-to-r from-purple-600 to-purple-700 text-white text-sm\">\r\n+                <tr>\r\n+                  <th className=\"px-3 py-3 sm:px-6 sm:py-4 text-left font-semibold\">User</th>\r\n+                  <th className=\"px-3 py-3 sm:px-6 sm:py-4 text-left font-semibold\">Role</th>\r\n+                  <th className=\"px-3 py-3 sm:px-6 sm:py-4 text-left font-semibold\">Status</th>\r\n+                  <th className=\"px-3 py-3 sm:px-6 sm:py-4 text-left font-semibold\">Joined</th>\r\n+                  <th className=\"px-3 py-3 sm:px-6 sm:py-4 text-left font-semibold\">Actions</th>\r\n+                </tr>\r\n+              </thead>\r\n+              <tbody className=\"divide-y divide-gray-200 text-sm\">\r\n+                {users.map((user, idx) => (\r\n+                  <tr key={user._id} className={`hover:bg-gray-50 transition-colors ${idx % 2 === 0 ? \"bg-white\" : \"bg-gray-50\"}`}>\r\n+                    <td className=\"px-3 py-3 sm:px-6 sm:py-4 break-words\">\r\n+                      <div className=\"font-semibold text-gray-900\">{user.username}</div>\r\n+                      <div className=\"text-xs text-gray-500\">{user.email}</div>\r\n+                      {user.firstName && user.lastName && (\r\n+                        <div className=\"text-xs text-gray-400\">{user.firstName} {user.lastName}</div>\r\n+                      )}\r\n+                    </td>\r\n+                    <td className=\"px-3 py-3 sm:px-6 sm:py-4\">\r\n+                      <span className={`inline-block px-3 py-1 rounded-full text-xs font-bold ${getRoleBadge(user.role)}`}>\r\n+                        {user.role}\r\n+                      </span>\r\n+                    </td>\r\n+                    <td className=\"px-3 py-3 sm:px-6 sm:py-4\">\r\n+                      <span className={`inline-block px-3 py-1 rounded-full text-xs font-bold ${getStatusBadge(user.blocked)}`}>\r\n+                        {user.blocked ? \"Blocked\" : \"Active\"}\r\n+                      </span>\r\n+                    </td>\r\n+                    <td className=\"px-3 py-3 sm:px-6 sm:py-4 text-gray-600 text-xs\">\r\n+                      {new Date(user.createdAt).toLocaleDateString()}\r\n+                    </td>\r\n+                    <td className=\"px-3 py-3 sm:px-6 sm:py-4\">\r\n+                      <button \r\n+                        onClick={() => navigate(`/cashier/users/${user._id}`)}\r\n+                        className=\"text-purple-600 hover:text-purple-800 transition-colors p-2 rounded-lg hover:bg-purple-50\"\r\n+                        title=\"View Details\"\r\n+                      >\r\n+                        <FaEye className=\"text-lg\" />\r\n+                      </button>\r\n+                    </td>\r\n+                  </tr>\r\n+                ))}\r\n+              </tbody>\r\n+            </table>\r\n+          )}\r\n+        </div>\r\n+      </div>\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1751627009108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,9 +221,9 @@\n                         {user.blocked ? \"Blocked\" : \"Active\"}\r\n                       </span>\r\n                     </td>\r\n                     <td className=\"px-3 py-3 sm:px-6 sm:py-4 text-gray-600 text-xs\">\r\n-                      {new Date(user.createdAt).toLocaleDateString()}\r\n+                      {user.createdAt ? new Date(user.createdAt).toLocaleDateString() : \"Unknown\"}\r\n                     </td>\r\n                     <td className=\"px-3 py-3 sm:px-6 sm:py-4\">\r\n                       <button \r\n                         onClick={() => navigate(`/cashier/users/${user._id}`)}\r\n"
                },
                {
                    "date": 1751627901828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,9 +221,12 @@\n                         {user.blocked ? \"Blocked\" : \"Active\"}\r\n                       </span>\r\n                     </td>\r\n                     <td className=\"px-3 py-3 sm:px-6 sm:py-4 text-gray-600 text-xs\">\r\n-                      {user.createdAt ? new Date(user.createdAt).toLocaleDateString() : \"Unknown\"}\r\n+                      {user.createdAt ? (() => {\r\n+                        const date = new Date(user.createdAt);\r\n+                        return isNaN(date.getTime()) ? \"Unknown\" : date.toLocaleDateString();\r\n+                      })() : \"Unknown\"}\r\n                     </td>\r\n                     <td className=\"px-3 py-3 sm:px-6 sm:py-4\">\r\n                       <button \r\n                         onClick={() => navigate(`/cashier/users/${user._id}`)}\r\n"
                },
                {
                    "date": 1751627988203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,12 +221,9 @@\n                         {user.blocked ? \"Blocked\" : \"Active\"}\r\n                       </span>\r\n                     </td>\r\n                     <td className=\"px-3 py-3 sm:px-6 sm:py-4 text-gray-600 text-xs\">\r\n-                      {user.createdAt ? (() => {\r\n-                        const date = new Date(user.createdAt);\r\n-                        return isNaN(date.getTime()) ? \"Unknown\" : date.toLocaleDateString();\r\n-                      })() : \"Unknown\"}\r\n+                      {user.createdAt ? new Date(user.createdAt).toLocaleDateString() : \"Unknown\"}\r\n                     </td>\r\n                     <td className=\"px-3 py-3 sm:px-6 sm:py-4\">\r\n                       <button \r\n                         onClick={() => navigate(`/cashier/users/${user._id}`)}\r\n"
                },
                {
                    "date": 1751628008204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,9 +196,8 @@\n                 <tr>\r\n                   <th className=\"px-3 py-3 sm:px-6 sm:py-4 text-left font-semibold\">User</th>\r\n                   <th className=\"px-3 py-3 sm:px-6 sm:py-4 text-left font-semibold\">Role</th>\r\n                   <th className=\"px-3 py-3 sm:px-6 sm:py-4 text-left font-semibold\">Status</th>\r\n-                  <th className=\"px-3 py-3 sm:px-6 sm:py-4 text-left font-semibold\">Joined</th>\r\n                   <th className=\"px-3 py-3 sm:px-6 sm:py-4 text-left font-semibold\">Actions</th>\r\n                 </tr>\r\n               </thead>\r\n               <tbody className=\"divide-y divide-gray-200 text-sm\">\r\n@@ -220,11 +219,8 @@\n                       <span className={`inline-block px-3 py-1 rounded-full text-xs font-bold ${getStatusBadge(user.blocked)}`}>\r\n                         {user.blocked ? \"Blocked\" : \"Active\"}\r\n                       </span>\r\n                     </td>\r\n-                    <td className=\"px-3 py-3 sm:px-6 sm:py-4 text-gray-600 text-xs\">\r\n-                      {user.createdAt ? new Date(user.createdAt).toLocaleDateString() : \"Unknown\"}\r\n-                    </td>\r\n                     <td className=\"px-3 py-3 sm:px-6 sm:py-4\">\r\n                       <button \r\n                         onClick={() => navigate(`/cashier/users/${user._id}`)}\r\n                         className=\"text-purple-600 hover:text-purple-800 transition-colors p-2 rounded-lg hover:bg-purple-50\"\r\n"
                }
            ],
            "date": 1751624804518,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nconst API = import.meta.env.VITE_AUTH_API_URL;\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    fetch(`${API}/cashier/users`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => setUsers(data.users || []));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-2xl font-bold mb-6\">Users</h1>\r\n      <table className=\"w-full border\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"border px-2 py-1\">Username</th>\r\n            <th className=\"border px-2 py-1\">Email</th>\r\n            <th className=\"border px-2 py-1\">Role</th>\r\n            <th className=\"border px-2 py-1\">Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map(u => (\r\n            <tr key={u._id}>\r\n              <td className=\"border px-2 py-1\">{u.username}</td>\r\n              <td className=\"border px-2 py-1\">{u.email}</td>\r\n              <td className=\"border px-2 py-1\">{u.role}</td>\r\n              <td className=\"border px-2 py-1\">{u.blocked ? \"Blocked\" : \"Active\"}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;"
        }
    ]
}