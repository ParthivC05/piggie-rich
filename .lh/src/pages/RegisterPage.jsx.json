{
    "sourceFile": "src/pages/RegisterPage.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1751355684764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1751363443244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,34 +1,64 @@\n import React, { useState } from \"react\";\r\n \r\n-const GOOGLE_FORM_ACTION = \"https://docs.google.com/forms/d/e/YOUR_REGISTER_FORM_ID/formResponse\"; // Replace with your Google Form action URL\r\n-\r\n const RegisterPage = () => {\r\n-  const [submitted, setSubmitted] = useState(false);\r\n+  const [form, setForm] = useState({\r\n+    username: \"\",\r\n+    password: \"\",\r\n+    confirmPassword: \"\",\r\n+    dob: \"\",\r\n+    firstName: \"\",\r\n+    lastName: \"\",\r\n+    email: \"\",\r\n+    phone: \"\",\r\n+  });\r\n+  const [message, setMessage] = useState(\"\");\r\n \r\n+  const handleChange = (e) => {\r\n+    setForm({ ...form, [e.target.name]: e.target.value });\r\n+  };\r\n+\r\n+  const handleSubmit = async (e) => {\r\n+    e.preventDefault();\r\n+    setMessage(\"\");\r\n+    if (form.password !== form.confirmPassword) {\r\n+      setMessage(\"Passwords do not match.\");\r\n+      return;\r\n+    }\r\n+    try {\r\n+      const res = await fetch(\"http://localhost:5000/api/register\", {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify(form),\r\n+      });\r\n+      const data = await res.json();\r\n+      if (res.ok) setMessage(\"Registration successful!\");\r\n+      else setMessage(data.error || \"Registration failed.\");\r\n+    } catch (err) {\r\n+      setMessage(\"Server error.\");\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n       <form\r\n         className=\"bg-white p-8 rounded shadow-md w-full max-w-md\"\r\n-        action={GOOGLE_FORM_ACTION}\r\n-        method=\"POST\"\r\n-        target=\"_blank\"\r\n-        onSubmit={() => setSubmitted(true)}\r\n+        onSubmit={handleSubmit}\r\n       >\r\n         <h2 className=\"text-2xl font-bold mb-6 text-center\">Register</h2>\r\n-        <input name=\"entry.USERNAME_FIELD_ID\" required placeholder=\"Username\" className=\"mb-3 w-full border rounded px-3 py-2\" />\r\n-        <input name=\"entry.PASSWORD_FIELD_ID\" type=\"password\" required placeholder=\"Password\" className=\"mb-3 w-full border rounded px-3 py-2\" />\r\n-        <input name=\"entry.CONFIRM_PASSWORD_FIELD_ID\" type=\"password\" required placeholder=\"Confirm Password\" className=\"mb-3 w-full border rounded px-3 py-2\" />\r\n-        <input name=\"entry.DOB_FIELD_ID\" type=\"date\" required placeholder=\"Date of Birth\" className=\"mb-3 w-full border rounded px-3 py-2\" />\r\n-        <input name=\"entry.FIRSTNAME_FIELD_ID\" required placeholder=\"First Name\" className=\"mb-3 w-full border rounded px-3 py-2\" />\r\n-        <input name=\"entry.LASTNAME_FIELD_ID\" required placeholder=\"Last Name\" className=\"mb-3 w-full border rounded px-3 py-2\" />\r\n-        <input name=\"entry.EMAIL_FIELD_ID\" type=\"email\" required placeholder=\"Email\" className=\"mb-3 w-full border rounded px-3 py-2\" />\r\n-        <input name=\"entry.PHONE_FIELD_ID\" required placeholder=\"Phone\" className=\"mb-6 w-full border rounded px-3 py-2\" />\r\n+        <input name=\"username\" required placeholder=\"Username\" className=\"mb-3 w-full border rounded px-3 py-2\" value={form.username} onChange={handleChange} />\r\n+        <input name=\"password\" type=\"password\" required placeholder=\"Password\" className=\"mb-3 w-full border rounded px-3 py-2\" value={form.password} onChange={handleChange} />\r\n+        <input name=\"confirmPassword\" type=\"password\" required placeholder=\"Confirm Password\" className=\"mb-3 w-full border rounded px-3 py-2\" value={form.confirmPassword} onChange={handleChange} />\r\n+        <input name=\"dob\" type=\"date\" required placeholder=\"Date of Birth\" className=\"mb-3 w-full border rounded px-3 py-2\" value={form.dob} onChange={handleChange} />\r\n+        <input name=\"firstName\" required placeholder=\"First Name\" className=\"mb-3 w-full border rounded px-3 py-2\" value={form.firstName} onChange={handleChange} />\r\n+        <input name=\"lastName\" required placeholder=\"Last Name\" className=\"mb-3 w-full border rounded px-3 py-2\" value={form.lastName} onChange={handleChange} />\r\n+        <input name=\"email\" type=\"email\" required placeholder=\"Email\" className=\"mb-3 w-full border rounded px-3 py-2\" value={form.email} onChange={handleChange} />\r\n+        <input name=\"phone\" required placeholder=\"Phone\" className=\"mb-6 w-full border rounded px-3 py-2\" value={form.phone} onChange={handleChange} />\r\n         <button type=\"submit\" className=\"w-full bg-blue-500 text-white font-bold py-2 rounded hover:bg-blue-600\">\r\n           Register\r\n         </button>\r\n-        {submitted && (\r\n-          <p className=\"text-green-600 mt-4 text-center\">Registration submitted! Check your email.</p>\r\n+        {message && (\r\n+          <p className={`mt-4 text-center ${message.includes(\"success\") ? \"text-green-600\" : \"text-red-600\"}`}>{message}</p>\r\n         )}\r\n       </form>\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1751364294930,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,8 @@\n import React, { useState } from \"react\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n+import { toast, ToastContainer } from \"react-toastify\";\r\n+import \"react-toastify/dist/ReactToastify.css\";\r\n \r\n const RegisterPage = () => {\r\n   const [form, setForm] = useState({\r\n     username: \"\",\r\n@@ -10,19 +13,18 @@\n     lastName: \"\",\r\n     email: \"\",\r\n     phone: \"\",\r\n   });\r\n-  const [message, setMessage] = useState(\"\");\r\n+  const navigate = useNavigate();\r\n \r\n   const handleChange = (e) => {\r\n     setForm({ ...form, [e.target.name]: e.target.value });\r\n   };\r\n \r\n   const handleSubmit = async (e) => {\r\n     e.preventDefault();\r\n-    setMessage(\"\");\r\n     if (form.password !== form.confirmPassword) {\r\n-      setMessage(\"Passwords do not match.\");\r\n+      toast.error(\"Passwords do not match.\");\r\n       return;\r\n     }\r\n     try {\r\n       const res = await fetch(\"http://localhost:5000/api/register\", {\r\n@@ -30,17 +32,22 @@\n         headers: { \"Content-Type\": \"application/json\" },\r\n         body: JSON.stringify(form),\r\n       });\r\n       const data = await res.json();\r\n-      if (res.ok) setMessage(\"Registration successful!\");\r\n-      else setMessage(data.error || \"Registration failed.\");\r\n+      if (res.ok) {\r\n+        toast.success(\"Registration successful!\");\r\n+        setTimeout(() => navigate(\"/\"), 1500);\r\n+      } else {\r\n+        toast.error(data.error || \"Registration failed.\");\r\n+      }\r\n     } catch (err) {\r\n-      setMessage(\"Server error.\");\r\n+      toast.error(\"Server error.\");\r\n     }\r\n   };\r\n \r\n   return (\r\n     <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n+      <ToastContainer />\r\n       <form\r\n         className=\"bg-white p-8 rounded shadow-md w-full max-w-md\"\r\n         onSubmit={handleSubmit}\r\n       >\r\n@@ -55,11 +62,8 @@\n         <input name=\"phone\" required placeholder=\"Phone\" className=\"mb-6 w-full border rounded px-3 py-2\" value={form.phone} onChange={handleChange} />\r\n         <button type=\"submit\" className=\"w-full bg-blue-500 text-white font-bold py-2 rounded hover:bg-blue-600\">\r\n           Register\r\n         </button>\r\n-        {message && (\r\n-          <p className={`mt-4 text-center ${message.includes(\"success\") ? \"text-green-600\" : \"text-red-600\"}`}>{message}</p>\r\n-        )}\r\n       </form>\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1751364326968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n       });\r\n       const data = await res.json();\r\n       if (res.ok) {\r\n         toast.success(\"Registration successful!\");\r\n-        setTimeout(() => navigate(\"/\"), 1500);\r\n+        setTimeout(() => navigate(\"/login\"), 1500);\r\n       } else {\r\n         toast.error(data.error || \"Registration failed.\");\r\n       }\r\n     } catch (err) {\r\n"
                }
            ],
            "date": 1751355684764,
            "name": "Commit-0",
            "content": "import React, { useState } from \"react\";\r\n\r\nconst GOOGLE_FORM_ACTION = \"https://docs.google.com/forms/d/e/YOUR_REGISTER_FORM_ID/formResponse\"; // Replace with your Google Form action URL\r\n\r\nconst RegisterPage = () => {\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n      <form\r\n        className=\"bg-white p-8 rounded shadow-md w-full max-w-md\"\r\n        action={GOOGLE_FORM_ACTION}\r\n        method=\"POST\"\r\n        target=\"_blank\"\r\n        onSubmit={() => setSubmitted(true)}\r\n      >\r\n        <h2 className=\"text-2xl font-bold mb-6 text-center\">Register</h2>\r\n        <input name=\"entry.USERNAME_FIELD_ID\" required placeholder=\"Username\" className=\"mb-3 w-full border rounded px-3 py-2\" />\r\n        <input name=\"entry.PASSWORD_FIELD_ID\" type=\"password\" required placeholder=\"Password\" className=\"mb-3 w-full border rounded px-3 py-2\" />\r\n        <input name=\"entry.CONFIRM_PASSWORD_FIELD_ID\" type=\"password\" required placeholder=\"Confirm Password\" className=\"mb-3 w-full border rounded px-3 py-2\" />\r\n        <input name=\"entry.DOB_FIELD_ID\" type=\"date\" required placeholder=\"Date of Birth\" className=\"mb-3 w-full border rounded px-3 py-2\" />\r\n        <input name=\"entry.FIRSTNAME_FIELD_ID\" required placeholder=\"First Name\" className=\"mb-3 w-full border rounded px-3 py-2\" />\r\n        <input name=\"entry.LASTNAME_FIELD_ID\" required placeholder=\"Last Name\" className=\"mb-3 w-full border rounded px-3 py-2\" />\r\n        <input name=\"entry.EMAIL_FIELD_ID\" type=\"email\" required placeholder=\"Email\" className=\"mb-3 w-full border rounded px-3 py-2\" />\r\n        <input name=\"entry.PHONE_FIELD_ID\" required placeholder=\"Phone\" className=\"mb-6 w-full border rounded px-3 py-2\" />\r\n        <button type=\"submit\" className=\"w-full bg-blue-500 text-white font-bold py-2 rounded hover:bg-blue-600\">\r\n          Register\r\n        </button>\r\n        {submitted && (\r\n          <p className=\"text-green-600 mt-4 text-center\">Registration submitted! Check your email.</p>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;"
        }
    ]
}