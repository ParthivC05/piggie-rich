{
    "sourceFile": "src/pages/DepositPage.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 30,
            "patches": [
                {
                    "date": 1751354743875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1751355125552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,14 +6,25 @@\n   const [amount, setAmount] = useState(\"\");\r\n   const [selectedPlatform, setSelectedPlatform] = useState(\"\");\r\n   const [paid, setPaid] = useState(false);\r\n \r\n-  // Fetch platforms\r\n+  // Fetch platforms from the same API as GameList\r\n   useEffect(() => {\r\n-    fetch(\"https://your-api.com/platforms\") // Replace with your actual API URL\r\n-      .then((res) => res.json())\r\n-      .then((data) => setPlatforms(data.data))\r\n-      .catch((err) => console.error(\"Failed to fetch platforms\", err));\r\n+    const fetchPlatforms = async () => {\r\n+      try {\r\n+        const res = await fetch(\r\n+          `https://slotslaunch.com/api/games?token=${import.meta.env.VITE_API_TOKEN}&public=1`\r\n+        );\r\n+        const data = await res.json();\r\n+        if (data?.data) setPlatforms(data.data);\r\n+        else setPlatforms([]);\r\n+      } catch (err) {\r\n+        console.error(\"Failed to fetch platforms\", err);\r\n+        setPlatforms([]);\r\n+      }\r\n+    };\r\n+\r\n+    fetchPlatforms();\r\n   }, []);\r\n \r\n   const isReadyToPay = amount && selectedPlatform;\r\n \r\n@@ -45,10 +56,10 @@\n             onChange={(e) => setSelectedPlatform(e.target.value)}\r\n           >\r\n             <option value=\"\">-- Select Platform --</option>\r\n             {platforms.map((platform, i) => (\r\n-              <option key={i} value={platform.name}>\r\n-                {platform.name}\r\n+              <option key={platform.id || i} value={platform.name || platform.title}>\r\n+                {platform.name || platform.title}\r\n               </option>\r\n             ))}\r\n           </select>\r\n         </div>\r\n@@ -111,5 +122,5 @@\n     </PayPalScriptProvider>\r\n   );\r\n };\r\n \r\n-export default DepositPage;\r\n+export\n\\ No newline at end of file\n"
                },
                {
                    "date": 1751355131888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,5 +122,5 @@\n     </PayPalScriptProvider>\r\n   );\r\n };\r\n \r\n-export\n\\ No newline at end of file\n+export default DepositPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1751355160800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n \r\n   const isReadyToPay = amount && selectedPlatform;\r\n \r\n   return (\r\n-    <PayPalScriptProvider options={{ \"client-id\": \"YOUR_PAYPAL_CLIENT_ID\" }}>\r\n+    <PayPalScriptProvider options={{ \"client-id\": \"\" }}>\r\n       <div className=\"min-h-screen bg-gray-100 flex flex-col md:flex-row justify-center items-start p-4 md:p-10 gap-10\">\r\n         {/* Deposit Form */}\r\n         <div className=\"bg-white rounded-lg shadow-md p-6 w-full md:w-1/2\">\r\n           <h2 className=\"text-xl font-bold mb-2\">Piggie Rich Deposit</h2>\r\n"
                },
                {
                    "date": 1751355181408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n \r\n   const isReadyToPay = amount && selectedPlatform;\r\n \r\n   return (\r\n-    <PayPalScriptProvider options={{ \"client-id\": \"\" }}>\r\n+    <PayPalScriptProvider options={{ \"client-id\": \"AWW61fl8Lnp6iYnjG6uKBmUkgRP3-uEZ33F1k6QBxycad7RHsLo_4n6mHKzEQHNRYbj0xCkbvncjm-IC\" }}>\r\n       <div className=\"min-h-screen bg-gray-100 flex flex-col md:flex-row justify-center items-start p-4 md:p-10 gap-10\">\r\n         {/* Deposit Form */}\r\n         <div className=\"bg-white rounded-lg shadow-md p-6 w-full md:w-1/2\">\r\n           <h2 className=\"text-xl font-bold mb-2\">Piggie Rich Deposit</h2>\r\n"
                },
                {
                    "date": 1751360314819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,8 @@\n   const [amount, setAmount] = useState(\"\");\r\n   const [selectedPlatform, setSelectedPlatform] = useState(\"\");\r\n   const [paid, setPaid] = useState(false);\r\n \r\n-  // Fetch platforms from the same API as GameList\r\n   useEffect(() => {\r\n     const fetchPlatforms = async () => {\r\n       try {\r\n         const res = await fetch(\r\n"
                },
                {
                    "date": 1751360321327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,16 +29,14 @@\n \r\n   return (\r\n     <PayPalScriptProvider options={{ \"client-id\": \"AWW61fl8Lnp6iYnjG6uKBmUkgRP3-uEZ33F1k6QBxycad7RHsLo_4n6mHKzEQHNRYbj0xCkbvncjm-IC\" }}>\r\n       <div className=\"min-h-screen bg-gray-100 flex flex-col md:flex-row justify-center items-start p-4 md:p-10 gap-10\">\r\n-        {/* Deposit Form */}\r\n         <div className=\"bg-white rounded-lg shadow-md p-6 w-full md:w-1/2\">\r\n           <h2 className=\"text-xl font-bold mb-2\">Piggie Rich Deposit</h2>\r\n           <p className=\"text-sm text-gray-600 mb-4\">\r\n             Enter your deposit amount and select at least one platform.\r\n           </p>\r\n \r\n-          {/* Amount Input */}\r\n           <label className=\"block mb-2 font-medium\">Amount of Deposit</label>\r\n           <input\r\n             type=\"number\"\r\n             className=\"w-full border rounded px-4 py-2 mb-4\"\r\n@@ -46,9 +44,8 @@\n             onChange={(e) => setAmount(e.target.value)}\r\n             placeholder=\"$\"\r\n           />\r\n \r\n-          {/* Platform Dropdown */}\r\n           <label className=\"block mb-2 font-medium\">Select Platform</label>\r\n           <select\r\n             className=\"w-full border rounded px-4 py-2\"\r\n             value={selectedPlatform}\r\n"
                },
                {
                    "date": 1751360329414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,8 @@\n             ))}\r\n           </select>\r\n         </div>\r\n \r\n-        {/* Order Summary */}\r\n         <div className=\"bg-white rounded-lg shadow-md p-6 w-full md:w-1/3\">\r\n           <h3 className=\"text-lg font-semibold mb-4\">Order Summary</h3>\r\n           <div className=\"border p-4 rounded mb-4\">\r\n             <div className=\"flex justify-between mb-4\">\r\n@@ -70,9 +69,8 @@\n                 ${amount || \"0.00\"} USD\r\n               </span>\r\n             </div>\r\n \r\n-            {/* PayPal Button */}\r\n             {isReadyToPay ? (\r\n               <PayPalButtons\r\n                 style={{ layout: \"vertical\", color: \"gold\", shape: \"rect\", label: \"paypal\" }}\r\n                 forceReRender={[amount, selectedPlatform]}\r\n@@ -91,9 +89,9 @@\n                 onApprove={(data, actions) => {\r\n                   return actions.order.capture().then((details) => {\r\n                     setPaid(true);\r\n                     alert(`Transaction completed by ${details.payer.name.given_name}`);\r\n-                    // You can also call your backend here to save the transaction\r\n+                    \r\n                   });\r\n                 }}\r\n                 onError={(err) => {\r\n                   console.error(\"PayPal Checkout Error\", err);\r\n"
                },
                {
                    "date": 1751445754469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,32 @@\n import React, { useEffect, useState } from \"react\";\r\n import { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n \r\n+const staticGames = [\r\n+  \"ULTRAPANDA/ULTRAMONSTER\",\r\n+  \"VPOWER/VBLINK\",\r\n+  \"EGAME/XGAME\",\r\n+  \"GOLDEN DRAGON\",\r\n+  \"GRANDSWEEPS\",\r\n+  \"ORIONSTAR\",\r\n+  \"FIREKIRIN\",\r\n+  \"MILKYWAY\",\r\n+  \"RIVERSWEEPS\",\r\n+  \"VEGAS X\",\r\n+  \"RIVERMONSTER\",\r\n+  \"FORTUNE2GO\",\r\n+  \"PANDAMASTER\",\r\n+  \"HIGHROLLER\",\r\n+  \"JUWA\",\r\n+  \"GAMEVAULT\",\r\n+  \"VEGAS SWEEPS\",\r\n+  \"CASH MACHINE\",\r\n+  \"MAFIA\",\r\n+  \"GAMEROOM\",\r\n+  \"MR ALL IN ONE\",\r\n+  \"ORION POWER\",\r\n+];\r\n+\r\n const DepositPage = () => {\r\n   const [platforms, setPlatforms] = useState([]);\r\n   const [amount, setAmount] = useState(\"\");\r\n   const [selectedPlatform, setSelectedPlatform] = useState(\"\");\r\n"
                },
                {
                    "date": 1751445767538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,19 +71,26 @@\n           />\r\n \r\n           <label className=\"block mb-2 font-medium\">Select Platform</label>\r\n           <select\r\n-            className=\"w-full border rounded px-4 py-2\"\r\n-            value={selectedPlatform}\r\n-            onChange={(e) => setSelectedPlatform(e.target.value)}\r\n-          >\r\n-            <option value=\"\">-- Select Platform --</option>\r\n-            {platforms.map((platform, i) => (\r\n-              <option key={platform.id || i} value={platform.name || platform.title}>\r\n-                {platform.name || platform.title}\r\n-              </option>\r\n-            ))}\r\n-          </select>\r\n+  className=\"w-full border rounded px-4 py-2\"\r\n+  value={selectedPlatform}\r\n+  onChange={(e) => setSelectedPlatform(e.target.value)}\r\n+>\r\n+  <option value=\"\">-- Select Platform --</option>\r\n+  {/* Static games first */}\r\n+  {staticGames.map((game, i) => (\r\n+    <option key={`static-${i}`} value={game}>\r\n+      {game}\r\n+    </option>\r\n+  ))}\r\n+  {/* Fetched games next */}\r\n+  {platforms.map((platform, i) => (\r\n+    <option key={platform.id || i} value={platform.name || platform.title}>\r\n+      {platform.name || platform.title}\r\n+    </option>\r\n+  ))}\r\n+</select>\r\n         </div>\r\n \r\n         <div className=\"bg-white rounded-lg shadow-md p-6 w-full md:w-1/3\">\r\n           <h3 className=\"text-lg font-semibold mb-4\">Order Summary</h3>\r\n"
                },
                {
                    "date": 1751445789611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,11 @@\n   useEffect(() => {\r\n     const fetchPlatforms = async () => {\r\n       try {\r\n         const res = await fetch(\r\n-          `https://slotslaunch.com/api/games?token=${import.meta.env.VITE_API_TOKEN}&public=1`\r\n+          `https://slotslaunch.com/api/games?token=${\r\n+            import.meta.env.VITE_API_TOKEN\r\n+          }&public=1`\r\n         );\r\n         const data = await res.json();\r\n         if (data?.data) setPlatforms(data.data);\r\n         else setPlatforms([]);\r\n@@ -52,9 +54,14 @@\n \r\n   const isReadyToPay = amount && selectedPlatform;\r\n \r\n   return (\r\n-    <PayPalScriptProvider options={{ \"client-id\": \"AWW61fl8Lnp6iYnjG6uKBmUkgRP3-uEZ33F1k6QBxycad7RHsLo_4n6mHKzEQHNRYbj0xCkbvncjm-IC\" }}>\r\n+    <PayPalScriptProvider\r\n+      options={{\r\n+        \"client-id\":\r\n+          \"AWW61fl8Lnp6iYnjG6uKBmUkgRP3-uEZ33F1k6QBxycad7RHsLo_4n6mHKzEQHNRYbj0xCkbvncjm-IC\",\r\n+      }}\r\n+    >\r\n       <div className=\"min-h-screen bg-gray-100 flex flex-col md:flex-row justify-center items-start p-4 md:p-10 gap-10\">\r\n         <div className=\"bg-white rounded-lg shadow-md p-6 w-full md:w-1/2\">\r\n           <h2 className=\"text-xl font-bold mb-2\">Piggie Rich Deposit</h2>\r\n           <p className=\"text-sm text-gray-600 mb-4\">\r\n@@ -71,41 +78,46 @@\n           />\r\n \r\n           <label className=\"block mb-2 font-medium\">Select Platform</label>\r\n           <select\r\n-  className=\"w-full border rounded px-4 py-2\"\r\n-  value={selectedPlatform}\r\n-  onChange={(e) => setSelectedPlatform(e.target.value)}\r\n->\r\n-  <option value=\"\">-- Select Platform --</option>\r\n-  {/* Static games first */}\r\n-  {staticGames.map((game, i) => (\r\n-    <option key={`static-${i}`} value={game}>\r\n-      {game}\r\n-    </option>\r\n-  ))}\r\n-  {/* Fetched games next */}\r\n-  {platforms.map((platform, i) => (\r\n-    <option key={platform.id || i} value={platform.name || platform.title}>\r\n-      {platform.name || platform.title}\r\n-    </option>\r\n-  ))}\r\n-</select>\r\n+            className=\"w-full border rounded px-4 py-2\"\r\n+            value={selectedPlatform}\r\n+            onChange={(e) => setSelectedPlatform(e.target.value)}\r\n+          >\r\n+            <option value=\"\">-- Select Platform --</option>\r\n+            {staticGames.map((game, i) => (\r\n+              <option key={`static-${i}`} value={game}>\r\n+                {game}\r\n+              </option>\r\n+            ))}\r\n+            {/* Fetched games next */}\r\n+            {platforms.map((platform, i) => (\r\n+              <option\r\n+                key={platform.id || i}\r\n+                value={platform.name || platform.title}\r\n+              >\r\n+                {platform.name || platform.title}\r\n+              </option>\r\n+            ))}\r\n+          </select>\r\n         </div>\r\n \r\n         <div className=\"bg-white rounded-lg shadow-md p-6 w-full md:w-1/3\">\r\n           <h3 className=\"text-lg font-semibold mb-4\">Order Summary</h3>\r\n           <div className=\"border p-4 rounded mb-4\">\r\n             <div className=\"flex justify-between mb-4\">\r\n               <span className=\"font-medium\">Total</span>\r\n-              <span className=\"font-semibold\">\r\n-                ${amount || \"0.00\"} USD\r\n-              </span>\r\n+              <span className=\"font-semibold\">${amount || \"0.00\"} USD</span>\r\n             </div>\r\n \r\n             {isReadyToPay ? (\r\n               <PayPalButtons\r\n-                style={{ layout: \"vertical\", color: \"gold\", shape: \"rect\", label: \"paypal\" }}\r\n+                style={{\r\n+                  layout: \"vertical\",\r\n+                  color: \"gold\",\r\n+                  shape: \"rect\",\r\n+                  label: \"paypal\",\r\n+                }}\r\n                 forceReRender={[amount, selectedPlatform]}\r\n                 createOrder={(data, actions) => {\r\n                   return actions.order.create({\r\n                     purchase_units: [\r\n@@ -120,10 +132,11 @@\n                 }}\r\n                 onApprove={(data, actions) => {\r\n                   return actions.order.capture().then((details) => {\r\n                     setPaid(true);\r\n-                    alert(`Transaction completed by ${details.payer.name.given_name}`);\r\n-                    \r\n+                    alert(\r\n+                      `Transaction completed by ${details.payer.name.given_name}`\r\n+                    );\r\n                   });\r\n                 }}\r\n                 onError={(err) => {\r\n                   console.error(\"PayPal Checkout Error\", err);\r\n@@ -137,16 +150,24 @@\n             )}\r\n           </div>\r\n \r\n           <p className=\"text-xs text-gray-400\">\r\n-            This product is offered and sold by the seller. PayPal is not responsible for item\r\n-            quality or delivery. <br />\r\n-            <a href=\"#\" className=\"text-blue-600 underline\">Report this link</a> | <a href=\"#\" className=\"text-blue-600 underline\">Privacy</a>\r\n+            This product is offered and sold by the seller. PayPal is not\r\n+            responsible for item quality or delivery. <br />\r\n+            <a href=\"#\" className=\"text-blue-600 underline\">\r\n+              Report this link\r\n+            </a>{\" \"}\r\n+            |{\" \"}\r\n+            <a href=\"#\" className=\"text-blue-600 underline\">\r\n+              Privacy\r\n+            </a>\r\n\\ No newline at end of file\n           </p>\r\n-          <p className=\"text-xs text-gray-400 mt-2 text-center\">Powered by PayPal</p>\r\n+          <p className=\"text-xs text-gray-400 mt-2 text-center\">\r\n+            Powered by PayPal\r\n+          </p>\r\n         </div>\r\n       </div>\r\n     </PayPalScriptProvider>\r\n   );\r\n };\r\n \r\n-export default DepositPage;\n+export default DepositPage;\r\n"
                },
                {
                    "date": 1751452786360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,8 @@\n               <option key={`static-${i}`} value={game}>\r\n                 {game}\r\n               </option>\r\n             ))}\r\n-            {/* Fetched games next */}\r\n             {platforms.map((platform, i) => (\r\n               <option\r\n                 key={platform.id || i}\r\n                 value={platform.name || platform.title}\r\n@@ -129,16 +128,32 @@\n                       },\r\n                     ],\r\n                   });\r\n                 }}\r\n-                onApprove={(data, actions) => {\r\n-                  return actions.order.capture().then((details) => {\r\n-                    setPaid(true);\r\n-                    alert(\r\n-                      `Transaction completed by ${details.payer.name.given_name}`\r\n-                    );\r\n-                  });\r\n-                }}\r\n+               onApprove={(data, actions) => {\r\n+  return actions.order.capture().then((details) => {\r\n+    setPaid(true);\r\n+    alert(`Transaction completed by ${details.payer.name.given_name}`);\r\n+\r\n+    // Collect extra info from user (phone, email, game username)\r\n+    fetch(`${import.meta.env.VITE_AUTH_API_URL}/deposit`, {\r\n+      method: \"POST\",\r\n+      headers: {\r\n+        \"Content-Type\": \"application/json\",\r\n+        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n+      },\r\n+      body: JSON.stringify({\r\n+        customerPhone: userPhone, // get from user input\r\n+        customerEmail: userEmail, // get from user input\r\n+        gameUsername: gameUsername, // get from user input\r\n+        game: selectedPlatform,\r\n+        amount,\r\n+        paypalOrderId: data.orderID,\r\n+        payer: details.payer,\r\n+      }),\r\n+    });\r\n+  });\r\n+}}\r\n                 onError={(err) => {\r\n                   console.error(\"PayPal Checkout Error\", err);\r\n                   alert(\"Payment failed.\");\r\n                 }}\r\n@@ -169,5 +184,5 @@\n     </PayPalScriptProvider>\r\n   );\r\n };\r\n \r\n-export default DepositPage;\n\\ No newline at end of file\n+export default DepositPage;\r\n"
                },
                {
                    "date": 1751452794153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,32 +128,36 @@\n                       },\r\n                     ],\r\n                   });\r\n                 }}\r\n-               onApprove={(data, actions) => {\r\n-  return actions.order.capture().then((details) => {\r\n-    setPaid(true);\r\n-    alert(`Transaction completed by ${details.payer.name.given_name}`);\r\n+                onApprove={(data, actions) => {\r\n+                  return actions.order.capture().then((details) => {\r\n+                    setPaid(true);\r\n+                    alert(\r\n+                      `Transaction completed by ${details.payer.name.given_name}`\r\n+                    );\r\n \r\n-    // Collect extra info from user (phone, email, game username)\r\n-    fetch(`${import.meta.env.VITE_AUTH_API_URL}/deposit`, {\r\n-      method: \"POST\",\r\n-      headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n-        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n-      },\r\n-      body: JSON.stringify({\r\n-        customerPhone: userPhone, // get from user input\r\n-        customerEmail: userEmail, // get from user input\r\n-        gameUsername: gameUsername, // get from user input\r\n-        game: selectedPlatform,\r\n-        amount,\r\n-        paypalOrderId: data.orderID,\r\n-        payer: details.payer,\r\n-      }),\r\n-    });\r\n-  });\r\n-}}\r\n+                    // Collect extra info from user (phone, email, game username)\r\n+                    fetch(`${import.meta.env.VITE_AUTH_API_URL}/deposit`, {\r\n+                      method: \"POST\",\r\n+                      headers: {\r\n+                        \"Content-Type\": \"application/json\",\r\n+                        Authorization: `Bearer ${localStorage.getItem(\r\n+                          \"token\"\r\n+                        )}`,\r\n+                      },\r\n+                      body: JSON.stringify({\r\n+                        customerPhone: userPhone, \r\n+                        customerEmail: userEmail, // get from user input\r\n+                        gameUsername: gameUsername, // get from user input\r\n+                        game: selectedPlatform,\r\n+                        amount,\r\n+                        paypalOrderId: data.orderID,\r\n+                        payer: details.payer,\r\n+                      }),\r\n+                    });\r\n+                  });\r\n+                }}\r\n                 onError={(err) => {\r\n                   console.error(\"PayPal Checkout Error\", err);\r\n                   alert(\"Payment failed.\");\r\n                 }}\r\n"
                },
                {
                    "date": 1751452799871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,10 +146,10 @@\n                         )}`,\r\n                       },\r\n                       body: JSON.stringify({\r\n                         customerPhone: userPhone, \r\n-                        customerEmail: userEmail, // get from user input\r\n-                        gameUsername: gameUsername, // get from user input\r\n+                        customerEmail: userEmail, \r\n+                        gameUsername: gameUsername,\r\n                         game: selectedPlatform,\r\n                         amount,\r\n                         paypalOrderId: data.orderID,\r\n                         payer: details.payer,\r\n"
                },
                {
                    "date": 1751453059075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n   return (\r\n     <PayPalScriptProvider\r\n       options={{\r\n         \"client-id\":\r\n-          \"AWW61fl8Lnp6iYnjG6uKBmUkgRP3-uEZ33F1k6QBxycad7RHsLo_4n6mHKzEQHNRYbj0xCkbvncjm-IC\",\r\n+          \"AUJPcF2I-FeMDbuLelzwShs0pknuG8kXN6saOJCbHQPCLJv_PCGwjWZI40tmQr9XosOHQfd93FdQq3_f\",\r\n       }}\r\n     >\r\n       <div className=\"min-h-screen bg-gray-100 flex flex-col md:flex-row justify-center items-start p-4 md:p-10 gap-10\">\r\n         <div className=\"bg-white rounded-lg shadow-md p-6 w-full md:w-1/2\">\r\n"
                },
                {
                    "date": 1751453521067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n   return (\r\n     <PayPalScriptProvider\r\n       options={{\r\n         \"client-id\":\r\n-          \"AUJPcF2I-FeMDbuLelzwShs0pknuG8kXN6saOJCbHQPCLJv_PCGwjWZI40tmQr9XosOHQfd93FdQq3_f\",\r\n+          \"AUJPcF2I-FeMDbuLelzwShs0pknuG8kXN6saOJCbHQPCLJv_PCGwjWZI40tmQr9XosOHQfd93FdQq3_fAUJPcF2I-FeMDbuLelzwShs0pknuG8kXN6saOJCbHQPCLJv_PCGwjWZI40tmQr9XosOHQfd93FdQq3_f\",\r\n       }}\r\n     >\r\n       <div className=\"min-h-screen bg-gray-100 flex flex-col md:flex-row justify-center items-start p-4 md:p-10 gap-10\">\r\n         <div className=\"bg-white rounded-lg shadow-md p-6 w-full md:w-1/2\">\r\n"
                },
                {
                    "date": 1751453527066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n   return (\r\n     <PayPalScriptProvider\r\n       options={{\r\n         \"client-id\":\r\n-          \"AUJPcF2I-FeMDbuLelzwShs0pknuG8kXN6saOJCbHQPCLJv_PCGwjWZI40tmQr9XosOHQfd93FdQq3_fAUJPcF2I-FeMDbuLelzwShs0pknuG8kXN6saOJCbHQPCLJv_PCGwjWZI40tmQr9XosOHQfd93FdQq3_f\",\r\n+          \"AUJPcF2I-FeMDbuLelzwShs0pknuG8kXN6saOJCbHQPCLJv_PCGwjWZI40tmQr9XosOHQfd93FdQq3_f\",\r\n       }}\r\n     >\r\n       <div className=\"min-h-screen bg-gray-100 flex flex-col md:flex-row justify-center items-start p-4 md:p-10 gap-10\">\r\n         <div className=\"bg-white rounded-lg shadow-md p-6 w-full md:w-1/2\">\r\n"
                },
                {
                    "date": 1751453839024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,56 +1,57 @@\n import React, { useEffect, useState } from \"react\";\r\n import { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n \r\n const staticGames = [\r\n-  \"ULTRAPANDA/ULTRAMONSTER\",\r\n-  \"VPOWER/VBLINK\",\r\n-  \"EGAME/XGAME\",\r\n-  \"GOLDEN DRAGON\",\r\n-  \"GRANDSWEEPS\",\r\n-  \"ORIONSTAR\",\r\n-  \"FIREKIRIN\",\r\n-  \"MILKYWAY\",\r\n-  \"RIVERSWEEPS\",\r\n-  \"VEGAS X\",\r\n-  \"RIVERMONSTER\",\r\n-  \"FORTUNE2GO\",\r\n-  \"PANDAMASTER\",\r\n-  \"HIGHROLLER\",\r\n-  \"JUWA\",\r\n-  \"GAMEVAULT\",\r\n-  \"VEGAS SWEEPS\",\r\n-  \"CASH MACHINE\",\r\n-  \"MAFIA\",\r\n-  \"GAMEROOM\",\r\n-  \"MR ALL IN ONE\",\r\n-  \"ORION POWER\",\r\n+  // ...your static games...\r\n ];\r\n \r\n const DepositPage = () => {\r\n   const [platforms, setPlatforms] = useState([]);\r\n   const [amount, setAmount] = useState(\"\");\r\n   const [selectedPlatform, setSelectedPlatform] = useState(\"\");\r\n   const [paid, setPaid] = useState(false);\r\n \r\n+  // User info states\r\n+  const [userPhone, setUserPhone] = useState(\"\");\r\n+  const [userEmail, setUserEmail] = useState(\"\");\r\n+  const [gameUsername, setGameUsername] = useState(\"\");\r\n+\r\n   useEffect(() => {\r\n     const fetchPlatforms = async () => {\r\n       try {\r\n         const res = await fetch(\r\n-          `https://slotslaunch.com/api/games?token=${\r\n-            import.meta.env.VITE_API_TOKEN\r\n-          }&public=1`\r\n+          `https://slotslaunch.com/api/games?token=${import.meta.env.VITE_API_TOKEN}&public=1`\r\n         );\r\n         const data = await res.json();\r\n         if (data?.data) setPlatforms(data.data);\r\n         else setPlatforms([]);\r\n       } catch (err) {\r\n-        console.error(\"Failed to fetch platforms\", err);\r\n         setPlatforms([]);\r\n       }\r\n     };\r\n \r\n+    // Fetch logged-in user details\r\n+    const fetchUserProfile = async () => {\r\n+      try {\r\n+        const res = await fetch(`${import.meta.env.VITE_AUTH_API_URL}/profile`, {\r\n+          headers: {\r\n+            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n+          },\r\n+        });\r\n+        const data = await res.json();\r\n+        if (data?.user) {\r\n+          setUserEmail(data.user.email || \"\");\r\n+          setUserPhone(data.user.phone || \"\");\r\n+          setGameUsername(data.user.username || \"\");\r\n+        }\r\n+      } catch (err) {\r\n+        // handle error if needed\r\n+      }\r\n+    };\r\n+\r\n     fetchPlatforms();\r\n+    fetchUserProfile();\r\n   }, []);\r\n \r\n   const isReadyToPay = amount && selectedPlatform;\r\n \r\n@@ -97,8 +98,35 @@\n                 {platform.name || platform.title}\r\n               </option>\r\n             ))}\r\n           </select>\r\n+\r\n+          <label className=\"block mb-2 font-medium mt-4\">Game Username</label>\r\n+          <input\r\n+            type=\"text\"\r\n+            className=\"w-full border rounded px-4 py-2 mb-4\"\r\n+            value={gameUsername}\r\n+            onChange={(e) => setGameUsername(e.target.value)}\r\n+            placeholder=\"Enter your game username\"\r\n+          />\r\n+\r\n+          <label className=\"block mb-2 font-medium\">Email</label>\r\n+          <input\r\n+            type=\"email\"\r\n+            className=\"w-full border rounded px-4 py-2 mb-4\"\r\n+            value={userEmail}\r\n+            readOnly\r\n+            disabled\r\n+          />\r\n+\r\n+          <label className=\"block mb-2 font-medium\">Phone</label>\r\n+          <input\r\n+            type=\"tel\"\r\n+            className=\"w-full border rounded px-4 py-2 mb-4\"\r\n+            value={userPhone}\r\n+            readOnly\r\n+            disabled\r\n+          />\r\n         </div>\r\n \r\n         <div className=\"bg-white rounded-lg shadow-md p-6 w-full md:w-1/3\">\r\n           <h3 className=\"text-lg font-semibold mb-4\">Order Summary</h3>\r\n@@ -134,10 +162,8 @@\n                     setPaid(true);\r\n                     alert(\r\n                       `Transaction completed by ${details.payer.name.given_name}`\r\n                     );\r\n-\r\n-                    // Collect extra info from user (phone, email, game username)\r\n                     fetch(`${import.meta.env.VITE_AUTH_API_URL}/deposit`, {\r\n                       method: \"POST\",\r\n                       headers: {\r\n                         \"Content-Type\": \"application/json\",\r\n@@ -145,10 +171,10 @@\n                           \"token\"\r\n                         )}`,\r\n                       },\r\n                       body: JSON.stringify({\r\n-                        customerPhone: userPhone, \r\n-                        customerEmail: userEmail, \r\n+                        customerPhone: userPhone,\r\n+                        customerEmail: userEmail,\r\n                         gameUsername: gameUsername,\r\n                         game: selectedPlatform,\r\n                         amount,\r\n                         paypalOrderId: data.orderID,\r\n@@ -188,5 +214,5 @@\n     </PayPalScriptProvider>\r\n   );\r\n };\r\n \r\n-export default DepositPage;\r\n+export default DepositPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1751453885252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,36 +99,10 @@\n               </option>\r\n             ))}\r\n           </select>\r\n \r\n-          <label className=\"block mb-2 font-medium mt-4\">Game Username</label>\r\n-          <input\r\n-            type=\"text\"\r\n-            className=\"w-full border rounded px-4 py-2 mb-4\"\r\n-            value={gameUsername}\r\n-            onChange={(e) => setGameUsername(e.target.value)}\r\n-            placeholder=\"Enter your game username\"\r\n-          />\r\n+         \r\n \r\n-          <label className=\"block mb-2 font-medium\">Email</label>\r\n-          <input\r\n-            type=\"email\"\r\n-            className=\"w-full border rounded px-4 py-2 mb-4\"\r\n-            value={userEmail}\r\n-            readOnly\r\n-            disabled\r\n-          />\r\n-\r\n-          <label className=\"block mb-2 font-medium\">Phone</label>\r\n-          <input\r\n-            type=\"tel\"\r\n-            className=\"w-full border rounded px-4 py-2 mb-4\"\r\n-            value={userPhone}\r\n-            readOnly\r\n-            disabled\r\n-          />\r\n-        </div>\r\n-\r\n         <div className=\"bg-white rounded-lg shadow-md p-6 w-full md:w-1/3\">\r\n           <h3 className=\"text-lg font-semibold mb-4\">Order Summary</h3>\r\n           <div className=\"border p-4 rounded mb-4\">\r\n             <div className=\"flex justify-between mb-4\">\r\n"
                },
                {
                    "date": 1751453894717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,10 @@\n               </option>\r\n             ))}\r\n           </select>\r\n \r\n-         \r\n+          \r\n+        </div>\r\n \r\n         <div className=\"bg-white rounded-lg shadow-md p-6 w-full md:w-1/3\">\r\n           <h3 className=\"text-lg font-semibold mb-4\">Order Summary</h3>\r\n           <div className=\"border p-4 rounded mb-4\">\r\n"
                },
                {
                    "date": 1751453962167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useEffect, useState } from \"react\";\r\n import { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n \r\n const staticGames = [\r\n-  // ...your static games...\r\n+  \r\n ];\r\n \r\n const DepositPage = () => {\r\n   const [platforms, setPlatforms] = useState([]);\r\n"
                },
                {
                    "date": 1751453969578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,31 @@\n import React, { useEffect, useState } from \"react\";\r\n import { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n \r\n const staticGames = [\r\n-  \r\n+  ULTRAPANDA/ULTRAMONSTER \r\n+VPOWER/VBLINK\r\n+EGAME/XGAME\r\n+GOLDEN DRAGON \r\n+GRANDSWEEPS \r\n+ORIONSTAR\r\n+FIREKIRIN\r\n+MILKYWAY\r\n+RIVERSWEEPS \r\n+VEGAS X\r\n+RIVERMONSTER\r\n+FORTUNE2GO\r\n+PANDAMASTER\r\n+HIGHROLLER \r\n+JUWA\r\n+GAMEVAULT\r\n+VEGAS SWEEPS \r\n+CASH MACHINE \r\n+MAFIA\r\n+GAMEROOM\r\n+MR ALL IN ONE\r\n+ORION POWER\r\n+\r\n ];\r\n \r\n const DepositPage = () => {\r\n   const [platforms, setPlatforms] = useState([]);\r\n"
                },
                {
                    "date": 1751453978111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,9 @@\n import React, { useEffect, useState } from \"react\";\r\n import { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n \r\n const staticGames = [\r\n-  ULTRAPANDA/ULTRAMONSTER \r\n-VPOWER/VBLINK\r\n-EGAME/XGAME\r\n-GOLDEN DRAGON \r\n-GRANDSWEEPS \r\n-ORIONSTAR\r\n-FIREKIRIN\r\n-MILKYWAY\r\n-RIVERSWEEPS \r\n-VEGAS X\r\n-RIVERMONSTER\r\n-FORTUNE2GO\r\n-PANDAMASTER\r\n-HIGHROLLER \r\n-JUWA\r\n-GAMEVAULT\r\n-VEGAS SWEEPS \r\n-CASH MACHINE \r\n-MAFIA\r\n-GAMEROOM\r\n-MR ALL IN ONE\r\n-ORION POWER\r\n-\r\n+  // ...your static games...\r\n ];\r\n \r\n const DepositPage = () => {\r\n   const [platforms, setPlatforms] = useState([]);\r\n"
                },
                {
                    "date": 1751453991564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,24 +30,9 @@\n       }\r\n     };\r\n \r\n     // Fetch logged-in user details\r\n-    const fetchUserProfile = async () => {\r\n-      try {\r\n-        const res = await fetch(`${import.meta.env.VITE_AUTH_API_URL}/profile`, {\r\n-          headers: {\r\n-            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n-          },\r\n-        });\r\n-        const data = await res.json();\r\n-        if (data?.user) {\r\n-          setUserEmail(data.user.email || \"\");\r\n-          setUserPhone(data.user.phone || \"\");\r\n-          setGameUsername(data.user.username || \"\");\r\n-        }\r\n-      } catch (err) {\r\n-        // handle error if needed\r\n-      }\r\n+  \r\n     };\r\n \r\n     fetchPlatforms();\r\n     fetchUserProfile();\r\n"
                },
                {
                    "date": 1751454001685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,10 +30,9 @@\n       }\r\n     };\r\n \r\n     // Fetch logged-in user details\r\n-  \r\n-    };\r\n+    \r\n \r\n     fetchPlatforms();\r\n     fetchUserProfile();\r\n   }, []);\r\n"
                },
                {
                    "date": 1751454016220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,41 +1,57 @@\n import React, { useEffect, useState } from \"react\";\r\n import { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n \r\n const staticGames = [\r\n-  // ...your static games...\r\n+  \"ULTRAPANDA/ULTRAMONSTER\",\r\n+  \"VPOWER/VBLINK\",\r\n+  \"EGAME/XGAME\",\r\n+  \"GOLDEN DRAGON\",\r\n+  \"GRANDSWEEPS\",\r\n+  \"ORIONSTAR\",\r\n+  \"FIREKIRIN\",\r\n+  \"MILKYWAY\",\r\n+  \"RIVERSWEEPS\",\r\n+  \"VEGAS X\",\r\n+  \"RIVERMONSTER\",\r\n+  \"FORTUNE2GO\",\r\n+  \"PANDAMASTER\",\r\n+  \"HIGHROLLER\",\r\n+  \"JUWA\",\r\n+  \"GAMEVAULT\",\r\n+  \"VEGAS SWEEPS\",\r\n+  \"CASH MACHINE\",\r\n+  \"MAFIA\",\r\n+  \"GAMEROOM\",\r\n+  \"MR ALL IN ONE\",\r\n+  \"ORION POWER\",\r\n ];\r\n \r\n const DepositPage = () => {\r\n   const [platforms, setPlatforms] = useState([]);\r\n   const [amount, setAmount] = useState(\"\");\r\n   const [selectedPlatform, setSelectedPlatform] = useState(\"\");\r\n   const [paid, setPaid] = useState(false);\r\n \r\n-  // User info states\r\n-  const [userPhone, setUserPhone] = useState(\"\");\r\n-  const [userEmail, setUserEmail] = useState(\"\");\r\n-  const [gameUsername, setGameUsername] = useState(\"\");\r\n-\r\n   useEffect(() => {\r\n     const fetchPlatforms = async () => {\r\n       try {\r\n         const res = await fetch(\r\n-          `https://slotslaunch.com/api/games?token=${import.meta.env.VITE_API_TOKEN}&public=1`\r\n+          `https://slotslaunch.com/api/games?token=${\r\n+            import.meta.env.VITE_API_TOKEN\r\n+          }&public=1`\r\n         );\r\n         const data = await res.json();\r\n         if (data?.data) setPlatforms(data.data);\r\n         else setPlatforms([]);\r\n       } catch (err) {\r\n+        console.error(\"Failed to fetch platforms\", err);\r\n         setPlatforms([]);\r\n       }\r\n     };\r\n-\r\n-    // Fetch logged-in user details\r\n     \r\n \r\n     fetchPlatforms();\r\n-    fetchUserProfile();\r\n   }, []);\r\n \r\n   const isReadyToPay = amount && selectedPlatform;\r\n \r\n@@ -82,10 +98,8 @@\n                 {platform.name || platform.title}\r\n               </option>\r\n             ))}\r\n           </select>\r\n-\r\n-          \r\n         </div>\r\n \r\n         <div className=\"bg-white rounded-lg shadow-md p-6 w-full md:w-1/3\">\r\n           <h3 className=\"text-lg font-semibold mb-4\">Order Summary</h3>\r\n@@ -121,8 +135,10 @@\n                     setPaid(true);\r\n                     alert(\r\n                       `Transaction completed by ${details.payer.name.given_name}`\r\n                     );\r\n+\r\n+                    // Collect extra info from user (phone, email, game username)\r\n                     fetch(`${import.meta.env.VITE_AUTH_API_URL}/deposit`, {\r\n                       method: \"POST\",\r\n                       headers: {\r\n                         \"Content-Type\": \"application/json\",\r\n@@ -130,10 +146,10 @@\n                           \"token\"\r\n                         )}`,\r\n                       },\r\n                       body: JSON.stringify({\r\n-                        customerPhone: userPhone,\r\n-                        customerEmail: userEmail,\r\n+                        customerPhone: userPhone, \r\n+                        customerEmail: userEmail, \r\n                         gameUsername: gameUsername,\r\n                         game: selectedPlatform,\r\n                         amount,\r\n                         paypalOrderId: data.orderID,\r\n@@ -173,5 +189,5 @@\n     </PayPalScriptProvider>\r\n   );\r\n };\r\n \r\n-export default DepositPage;\n\\ No newline at end of file\n+export default DepositPage;\r\n"
                },
                {
                    "date": 1751454022180,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,11 +47,28 @@\n         console.error(\"Failed to fetch platforms\", err);\r\n         setPlatforms([]);\r\n       }\r\n     };\r\n-    \r\n+    const fetchUserProfile = async () => {\r\n+      try {\r\n+        const res = await fetch(`${import.meta.env.VITE_AUTH_API_URL}/profile`, {\r\n+          headers: {\r\n+            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n+          },\r\n+        });\r\n+        const data = await res.json();\r\n+        if (data?.user) {\r\n+          setUserEmail(data.user.email || \"\");\r\n+          setUserPhone(data.user.phone || \"\");\r\n+          setGameUsername(data.user.username || \"\");\r\n+        }\r\n+      } catch (err) {\r\n+        // handle error if needed\r\n+      }\r\n+    };\r\n \r\n     fetchPlatforms();\r\n+    fetchUserProfile\r\n   }, []);\r\n \r\n   const isReadyToPay = amount && selectedPlatform;\r\n \r\n"
                },
                {
                    "date": 1751454173365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,11 @@\n   const [platforms, setPlatforms] = useState([]);\r\n   const [amount, setAmount] = useState(\"\");\r\n   const [selectedPlatform, setSelectedPlatform] = useState(\"\");\r\n   const [paid, setPaid] = useState(false);\r\n+  const [userPhone, setUserPhone] = useState(\"\");\r\n+  const [userEmail, setUserEmail] = useState(\"\");\r\n+  const [gameUsername, setGameUsername] = useState(\"\");\r\n \r\n   useEffect(() => {\r\n     const fetchPlatforms = async () => {\r\n       try {\r\n@@ -66,9 +69,9 @@\n       }\r\n     };\r\n \r\n     fetchPlatforms();\r\n-    fetchUserProfile\r\n+    fetchUserProfile();\r\n   }, []);\r\n \r\n   const isReadyToPay = amount && selectedPlatform;\r\n \r\n"
                },
                {
                    "date": 1751456495996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,8 +81,9 @@\n         \"client-id\":\r\n           \"AUJPcF2I-FeMDbuLelzwShs0pknuG8kXN6saOJCbHQPCLJv_PCGwjWZI40tmQr9XosOHQfd93FdQq3_f\",\r\n       }}\r\n     >\r\n+      <ToastContainer />\r\n       <div className=\"min-h-screen bg-gray-100 flex flex-col md:flex-row justify-center items-start p-4 md:p-10 gap-10\">\r\n         <div className=\"bg-white rounded-lg shadow-md p-6 w-full md:w-1/2\">\r\n           <h2 className=\"text-xl font-bold mb-2\">Piggie Rich Deposit</h2>\r\n           <p className=\"text-sm text-gray-600 mb-4\">\r\n"
                },
                {
                    "date": 1751456575946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n import React, { useEffect, useState } from \"react\";\r\n import { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n+import { ToastContainer, toast } from \"react-toastify\";\r\n+import \"react-toastify/dist/ReactToastify.css\";\r\n \r\n const staticGames = [\r\n   \"ULTRAPANDA/ULTRAMONSTER\",\r\n   \"VPOWER/VBLINK\",\r\n@@ -150,39 +152,49 @@\n                       },\r\n                     ],\r\n                   });\r\n                 }}\r\n-                onApprove={(data, actions) => {\r\n-                  return actions.order.capture().then((details) => {\r\n+                onApprove={async (data, actions) => {\r\n+                  return actions.order.capture().then(async (details) => {\r\n                     setPaid(true);\r\n-                    alert(\r\n-                      `Transaction completed by ${details.payer.name.given_name}`\r\n-                    );\r\n-\r\n-                    // Collect extra info from user (phone, email, game username)\r\n-                    fetch(`${import.meta.env.VITE_AUTH_API_URL}/deposit`, {\r\n-                      method: \"POST\",\r\n-                      headers: {\r\n-                        \"Content-Type\": \"application/json\",\r\n-                        Authorization: `Bearer ${localStorage.getItem(\r\n-                          \"token\"\r\n-                        )}`,\r\n-                      },\r\n-                      body: JSON.stringify({\r\n-                        customerPhone: userPhone, \r\n-                        customerEmail: userEmail, \r\n-                        gameUsername: gameUsername,\r\n-                        game: selectedPlatform,\r\n-                        amount,\r\n-                        paypalOrderId: data.orderID,\r\n-                        payer: details.payer,\r\n-                      }),\r\n-                    });\r\n+                    try {\r\n+                      const res = await fetch(\r\n+                        `${import.meta.env.VITE_AUTH_API_URL}/deposit`,\r\n+                        {\r\n+                          method: \"POST\",\r\n+                          headers: {\r\n+                            \"Content-Type\": \"application/json\",\r\n+                            Authorization: `Bearer ${localStorage.getItem(\r\n+                              \"token\"\r\n+                            )}`,\r\n+                          },\r\n+                          body: JSON.stringify({\r\n+                            customerPhone: userPhone,\r\n+                            customerEmail: userEmail,\r\n+                            gameUsername: gameUsername,\r\n+                            game: selectedPlatform,\r\n+                            amount,\r\n+                            paypalOrderId: data.orderID,\r\n+                            payer: details.payer,\r\n+                          }),\r\n+                        }\r\n+                      );\r\n+                      const resp = await res.json();\r\n+                      if (res.ok && resp.success) {\r\n+                        toast.success(\"Deposit successful!\");\r\n+                      } else {\r\n+                        toast.error(\r\n+                          resp.error || \"Deposit failed. Please contact support.\"\r\n+                        );\r\n+                      }\r\n+                    } catch (err) {\r\n+                      toast.error(\"Deposit failed. Please try again.\");\r\n+                    }\r\n                   });\r\n                 }}\r\n                 onError={(err) => {\r\n                   console.error(\"PayPal Checkout Error\", err);\r\n-                  alert(\"Payment failed.\");\r\n+                  toast.error(\"Payment failed.\");\r\n                 }}\r\n               />\r\n             ) : (\r\n               <p className=\"text-red-500 text-sm\">\r\n@@ -210,5 +222,5 @@\n     </PayPalScriptProvider>\r\n   );\r\n };\r\n \r\n-export default DepositPage;\r\n+export default DepositPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1751457675063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n     >\r\n       <ToastContainer />\r\n       <div className=\"min-h-screen bg-gray-100 flex flex-col md:flex-row justify-center items-start p-4 md:p-10 gap-10\">\r\n         <div className=\"bg-white rounded-lg shadow-md p-6 w-full md:w-1/2\">\r\n-          <h2 className=\"text-xl font-bold mb-2\">Piggie Rich Deposit</h2>\r\n+          <h2 className=\"text-xl font-bold mb-2\">Waiwaisweeps Deposit</h2>\r\n           <p className=\"text-sm text-gray-600 mb-4\">\r\n             Enter your deposit amount and select at least one platform.\r\n           </p>\r\n \r\n"
                }
            ],
            "date": 1751354743875,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n\r\nconst DepositPage = () => {\r\n  const [platforms, setPlatforms] = useState([]);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [selectedPlatform, setSelectedPlatform] = useState(\"\");\r\n  const [paid, setPaid] = useState(false);\r\n\r\n  // Fetch platforms\r\n  useEffect(() => {\r\n    fetch(\"https://your-api.com/platforms\") // Replace with your actual API URL\r\n      .then((res) => res.json())\r\n      .then((data) => setPlatforms(data.data))\r\n      .catch((err) => console.error(\"Failed to fetch platforms\", err));\r\n  }, []);\r\n\r\n  const isReadyToPay = amount && selectedPlatform;\r\n\r\n  return (\r\n    <PayPalScriptProvider options={{ \"client-id\": \"YOUR_PAYPAL_CLIENT_ID\" }}>\r\n      <div className=\"min-h-screen bg-gray-100 flex flex-col md:flex-row justify-center items-start p-4 md:p-10 gap-10\">\r\n        {/* Deposit Form */}\r\n        <div className=\"bg-white rounded-lg shadow-md p-6 w-full md:w-1/2\">\r\n          <h2 className=\"text-xl font-bold mb-2\">Piggie Rich Deposit</h2>\r\n          <p className=\"text-sm text-gray-600 mb-4\">\r\n            Enter your deposit amount and select at least one platform.\r\n          </p>\r\n\r\n          {/* Amount Input */}\r\n          <label className=\"block mb-2 font-medium\">Amount of Deposit</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"w-full border rounded px-4 py-2 mb-4\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            placeholder=\"$\"\r\n          />\r\n\r\n          {/* Platform Dropdown */}\r\n          <label className=\"block mb-2 font-medium\">Select Platform</label>\r\n          <select\r\n            className=\"w-full border rounded px-4 py-2\"\r\n            value={selectedPlatform}\r\n            onChange={(e) => setSelectedPlatform(e.target.value)}\r\n          >\r\n            <option value=\"\">-- Select Platform --</option>\r\n            {platforms.map((platform, i) => (\r\n              <option key={i} value={platform.name}>\r\n                {platform.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Order Summary */}\r\n        <div className=\"bg-white rounded-lg shadow-md p-6 w-full md:w-1/3\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">Order Summary</h3>\r\n          <div className=\"border p-4 rounded mb-4\">\r\n            <div className=\"flex justify-between mb-4\">\r\n              <span className=\"font-medium\">Total</span>\r\n              <span className=\"font-semibold\">\r\n                ${amount || \"0.00\"} USD\r\n              </span>\r\n            </div>\r\n\r\n            {/* PayPal Button */}\r\n            {isReadyToPay ? (\r\n              <PayPalButtons\r\n                style={{ layout: \"vertical\", color: \"gold\", shape: \"rect\", label: \"paypal\" }}\r\n                forceReRender={[amount, selectedPlatform]}\r\n                createOrder={(data, actions) => {\r\n                  return actions.order.create({\r\n                    purchase_units: [\r\n                      {\r\n                        amount: {\r\n                          value: parseFloat(amount).toFixed(2),\r\n                        },\r\n                        description: `Deposit for ${selectedPlatform}`,\r\n                      },\r\n                    ],\r\n                  });\r\n                }}\r\n                onApprove={(data, actions) => {\r\n                  return actions.order.capture().then((details) => {\r\n                    setPaid(true);\r\n                    alert(`Transaction completed by ${details.payer.name.given_name}`);\r\n                    // You can also call your backend here to save the transaction\r\n                  });\r\n                }}\r\n                onError={(err) => {\r\n                  console.error(\"PayPal Checkout Error\", err);\r\n                  alert(\"Payment failed.\");\r\n                }}\r\n              />\r\n            ) : (\r\n              <p className=\"text-red-500 text-sm\">\r\n                Please enter amount and select a platform to proceed.\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          <p className=\"text-xs text-gray-400\">\r\n            This product is offered and sold by the seller. PayPal is not responsible for item\r\n            quality or delivery. <br />\r\n            <a href=\"#\" className=\"text-blue-600 underline\">Report this link</a> | <a href=\"#\" className=\"text-blue-600 underline\">Privacy</a>\r\n          </p>\r\n          <p className=\"text-xs text-gray-400 mt-2 text-center\">Powered by PayPal</p>\r\n        </div>\r\n      </div>\r\n    </PayPalScriptProvider>\r\n  );\r\n};\r\n\r\nexport default DepositPage;\r\n"
        }
    ]
}