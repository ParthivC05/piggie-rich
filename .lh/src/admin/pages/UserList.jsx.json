{
    "sourceFile": "src/admin/pages/UserList.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 16,
            "patches": [
                {
                    "date": 1751537598253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1751544282473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,39 +16,52 @@\n   }, []);\r\n \r\n   return (\r\n     <AdminLayout>\r\n-      <h1 className=\"text-2xl font-bold mb-6\">Users</h1>\r\n-      <table className=\"w-full border\">\r\n-        <thead>\r\n-          <tr>\r\n-            <th className=\"border px-2 py-1\">Username</th>\r\n-            <th className=\"border px-2 py-1\">Email</th>\r\n-            <th className=\"border px-2 py-1\">Role</th>\r\n-            <th className=\"border px-2 py-1\">Status</th>\r\n-            <th className=\"border px-2 py-1\">Actions</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {users.map((u) => (\r\n-            <tr key={u._id}>\r\n-              <td className=\"border px-2 py-1\">{u.username}</td>\r\n-              <td className=\"border px-2 py-1\">{u.email}</td>\r\n-              <td className=\"border px-2 py-1\">{u.role}</td>\r\n-              <td className=\"border px-2 py-1\">{u.blocked ? \"Blocked\" : \"Active\"}</td>\r\n-              <td className=\"border px-2 py-1\">\r\n-                <button\r\n-                  onClick={() => navigate(`/admin/users/${u._id}`)}\r\n-                  className=\"text-blue-600 underline\"\r\n-                >\r\n-                  View\r\n-                </button>\r\n-              </td>\r\n+      <h1 className=\"text-3xl font-bold mb-8 text-gray-800\">Users</h1>\r\n+\r\n+      <div className=\"overflow-x-auto\">\r\n+        <table className=\"min-w-full bg-white rounded-lg shadow-md overflow-hidden\">\r\n+          <thead>\r\n+            <tr className=\"bg-gray-100 text-gray-700 text-left\">\r\n+              <th className=\"px-4 py-3\">Username</th>\r\n+              <th className=\"px-4 py-3\">Email</th>\r\n+              <th className=\"px-4 py-3\">Role</th>\r\n\\ No newline at end of file\n+              <th className=\"px-4 py-3\">Status</th>\r\n+              <th className=\"px-4 py-3\">Actions</th>\r\n             </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n+          </thead>\r\n+          <tbody>\r\n+            {users.map((u, idx) => (\r\n+              <tr key={u._id} className={idx % 2 === 0 ? \"bg-gray-50\" : \"\"}>\r\n+                <td className=\"px-4 py-2\">{u.username}</td>\r\n+                <td className=\"px-4 py-2\">{u.email}</td>\r\n+                <td className=\"px-4 py-2 capitalize\">{u.role}</td>\r\n+                <td className=\"px-4 py-2\">\r\n+                  <span\r\n+                    className={`px-3 py-1 rounded-full text-xs font-semibold ${\r\n+                      u.blocked\r\n+                        ? \"bg-red-100 text-red-600\"\r\n+                        : \"bg-green-100 text-green-600\"\r\n+                    }`}\r\n+                  >\r\n+                    {u.blocked ? \"Blocked\" : \"Active\"}\r\n+                  </span>\r\n+                </td>\r\n+                <td className=\"px-4 py-2\">\r\n+                  <button\r\n+                    onClick={() => navigate(`/admin/users/${u._id}`)}\r\n+                    className=\"px-3 py-1 text-sm bg-blue-500 text-white rounded hover:bg-blue-600 transition\"\r\n+                  >\r\n+                    View\r\n+                  </button>\r\n+                </td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n     </AdminLayout>\r\n   );\r\n };\r\n \r\n-export default UserList;\n+export default UserList;\r\n"
                },
                {
                    "date": 1753698837561,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,67 +1,232 @@\n-import React, { useEffect, useState } from \"react\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  FaEye,\r\n+  FaEdit,\r\n+  FaTrash,\r\n+  FaSearch,\r\n+  FaChevronRight,\r\n+  FaChevronLeft,\r\n+} from \"react-icons/fa\";\r\n+import { Link } from \"react-router-dom\";\r\n import AdminLayout from \"../components/AdminLayout\";\r\n+import ConfirmModal from \"../components/ConfirmModal\";\r\n+import { toast } from \"react-toastify\";\r\n \r\n-const UserList = () => {\r\n+const UserTable = () => {\r\n   const [users, setUsers] = useState([]);\r\n-  const token = localStorage.getItem(\"token\");\r\n-  const navigate = useNavigate();\r\n+  const [loading, setLoading] = useState(true);\r\n \r\n-  useEffect(() => {\r\n-    fetch(`${import.meta.env.VITE_AUTH_API_URL}/admin/users`, {\r\n-      headers: { Authorization: `Bearer ${token}` },\r\n-    })\r\n-      .then((res) => res.json())\r\n-      .then((data) => setUsers(data.users || []));\r\n-  }, []);\r\n+  const [searchTerm, setSearchTerm] = useState(\"\");\r\n+  const [currentPage, setCurrentPage] = useState(1);\r\n+  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n+  const [showModal, setShowModal] = useState(false);\r\n \r\n+  const filteredUsers = users.filter((user) =>\r\n+    `${user.username} ${user.email} ${user.role} ${user.status}`\r\n+      .toLowerCase()\r\n+      .includes(searchTerm.toLowerCase())\r\n+  );\r\n+\r\n+  const totalPages = Math.ceil(filteredUsers.length / rowsPerPage);\r\n+  const startIndex = (currentPage - 1) * rowsPerPage;\r\n+  const endIndex = Math.min(startIndex + rowsPerPage, filteredUsers.length);\r\n+  const paginatedUsers = filteredUsers.slice(startIndex, endIndex);\r\n+\r\n+  const goToPage = (page) => {\r\n+    if (page >= 1 && page <= totalPages) {\r\n+      setCurrentPage(page);\r\n+    }\r\n+  };\r\n+\r\n+  const handleRowsChange = (e) => {\r\n+    setRowsPerPage(Number(e.target.value));\r\n+    setCurrentPage(1);\r\n+  };\r\n+\r\n+  const handleToggle = (index) => {\r\n+    const updatedUsers = [...users];\r\n+    updatedUsers[index].status =\r\n+      updatedUsers[index].status === \"Active\" ? \"Inactive\" : \"Active\";\r\n+    setUsers(updatedUsers);\r\n+  };\r\n+\r\n+  const handleDelete = () => {\r\n+    console.log(\"Item deleted\");\r\n+    setShowModal(false);\r\n\\ No newline at end of file\n+  };\r\n+\r\n   return (\r\n     <AdminLayout>\r\n-      <h1 className=\"text-3xl font-bold mb-8 text-gray-800\">Users</h1>\r\n+      <div className=\"p-4 sm:p-6 bg-white rounded-xl shadow-md overflow-x-auto\">\r\n+        {/* Top Controls */}\r\n+        <div className=\"flex flex-col md:flex-row justify-between gap-4 mb-4\">\r\n+          <p className=\"text-sm md:text-base\">\r\n+            {filteredUsers.length} Records Found\r\n+          </p>\r\n \r\n-      <div className=\"overflow-x-auto\">\r\n-        <table className=\"min-w-full bg-white rounded-lg shadow-md overflow-hidden\">\r\n-          <thead>\r\n-            <tr className=\"bg-gray-100 text-gray-700 text-left\">\r\n-              <th className=\"px-4 py-3\">Username</th>\r\n-              <th className=\"px-4 py-3\">Email</th>\r\n-              <th className=\"px-4 py-3\">Role</th>\r\n-              <th className=\"px-4 py-3\">Status</th>\r\n-              <th className=\"px-4 py-3\">Actions</th>\r\n-            </tr>\r\n-          </thead>\r\n-          <tbody>\r\n-            {users.map((u, idx) => (\r\n-              <tr key={u._id} className={idx % 2 === 0 ? \"bg-gray-50\" : \"\"}>\r\n-                <td className=\"px-4 py-2\">{u.username}</td>\r\n-                <td className=\"px-4 py-2\">{u.email}</td>\r\n-                <td className=\"px-4 py-2 capitalize\">{u.role}</td>\r\n-                <td className=\"px-4 py-2\">\r\n-                  <span\r\n-                    className={`px-3 py-1 rounded-full text-xs font-semibold ${\r\n-                      u.blocked\r\n-                        ? \"bg-red-100 text-red-600\"\r\n-                        : \"bg-green-100 text-green-600\"\r\n-                    }`}\r\n-                  >\r\n-                    {u.blocked ? \"Blocked\" : \"Active\"}\r\n-                  </span>\r\n-                </td>\r\n-                <td className=\"px-4 py-2\">\r\n-                  <button\r\n-                    onClick={() => navigate(`/admin/users/${u._id}`)}\r\n-                    className=\"px-3 py-1 text-sm bg-blue-500 text-white rounded hover:bg-blue-600 transition\"\r\n-                  >\r\n-                    View\r\n-                  </button>\r\n-                </td>\r\n+          <div className=\"flex flex-col sm:flex-row gap-2 items-start sm:items-center justify-end\">\r\n+            <div className=\"flex items-center border border-gray-300 rounded-md overflow-hidden w-full sm:w-auto\">\r\n+              <input\r\n+                type=\"text\"\r\n+                placeholder=\"Search by username, email, role or status\"\r\n+                className=\"px-4 py-2 outline-none w-full sm:w-64\"\r\n+                value={searchTerm}\r\n+                onChange={(e) => {\r\n+                  setSearchTerm(e.target.value);\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+              />\r\n+              <FaSearch className=\"text-gray-500 mx-2\" />\r\n+            </div>\r\n+            <img\r\n+              src=\"/filter.png\"\r\n+              alt=\"Filter\"\r\n+              className=\"w-10 h-10 cursor-pointer\"\r\n+            />\r\n+          </div>\r\n+        </div>\r\n+\r\n+        {/* Table */}\r\n+        <div className=\"overflow-x-auto\">\r\n+          <table className=\"min-w-full text-sm border-separate border-spacing-y-2\">\r\n+            <thead className=\"bg-gray-100 text-gray-700 text-left\">\r\n+              <tr>\r\n+                <th className=\"px-4 py-2\">USERNAME ↓</th>\r\n+                <th className=\"px-4 py-2\">EMAIL ↓</th>\r\n+                <th className=\"px-4 py-2\">ROLE ↓</th>\r\n+                <th className=\"px-4 py-2\">STATUS ↓</th>\r\n+                <th className=\"px-4 py-2\">TOGGLE</th>\r\n+                <th className=\"px-4 py-2\">ACTIONS ↓</th>\r\n               </tr>\r\n-            ))}\r\n-          </tbody>\r\n-        </table>\r\n+            </thead>\r\n+            <tbody>\r\n+              {paginatedUsers.length === 0 ? (\r\n+                <tr>\r\n+                  <td colSpan=\"6\" className=\"text-center py-4 text-red-500\">\r\n+                    No users match your search.\r\n+                  </td>\r\n+                </tr>\r\n+              ) : (\r\n+                paginatedUsers.map((user, index) => (\r\n+                  <tr key={index} className=\"bg-white shadow rounded-lg\">\r\n+                    <td className=\"px-4 py-2 font-medium\">{user.username}</td>\r\n+                    <td className=\"px-4 py-2\">{user.email}</td>\r\n+                    <td className=\"px-4 py-2\">{user.role}</td>\r\n+                    <td className=\"px-4 py-2\">\r\n+                      <span\r\n+                        className={`font-semibold ${\r\n+                          user.status === \"Active\"\r\n+                            ? \"text-green-600\"\r\n+                            : \"text-red-600\"\r\n+                        }`}\r\n+                      >\r\n+                        {user.status}\r\n+                      </span>\r\n+                    </td>\r\n+                    <td className=\"px-4 py-2\">\r\n+                      <button\r\n+                        onClick={() => handleToggle(index)}\r\n+                        className={`w-12 h-6 flex items-center rounded-full p-1 transition-colors duration-300 ${\r\n+                          user.status === \"Active\"\r\n+                            ? \"bg-green-500\"\r\n+                            : \"bg-gray-300\"\r\n+                        }`}\r\n+                      >\r\n+                        <div\r\n+                          className={`w-4 h-4 rounded-full bg-white shadow-md transform transition-transform duration-300 ${\r\n+                            user.status === \"Active\"\r\n+                              ? \"translate-x-6\"\r\n+                              : \"translate-x-0\"\r\n+                          }`}\r\n+                        ></div>\r\n+                      </button>\r\n+                    </td>\r\n+                    <td className=\"px-4 py-2\">\r\n+                      <div className=\"flex flex-col sm:flex-row gap-2\">\r\n+                        <button className=\"bg-yellow-400 hover:bg-yellow-500 text-white p-2 rounded\">\r\n+                          <FaEye />\r\n+                        </button>\r\n+                        <Link to=\"edituser\">\r\n+                          <button className=\"bg-blue-500 hover:bg-blue-600 text-white p-2 rounded\">\r\n+                            <FaEdit />\r\n+                          </button>\r\n+                        </Link>\r\n+                        <button\r\n+                          onClick={() => setShowModal(true)}\r\n+                          className=\"bg-red-500 hover:bg-red-600 text-white p-2 rounded\"\r\n+                        >\r\n+                          <FaTrash />\r\n+                        </button>\r\n+                      </div>\r\n+                    </td>\r\n+                  </tr>\r\n+                ))\r\n+              )}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+\r\n+        {/* Pagination */}\r\n+        <div className=\"flex flex-col md:flex-row justify-between items-center mt-6 gap-4\">\r\n+          <div className=\"flex gap-2 items-center\">\r\n+            <label htmlFor=\"rows\">Show rows:</label>\r\n+            <select\r\n+              id=\"rows\"\r\n+              value={rowsPerPage}\r\n+              onChange={handleRowsChange}\r\n+              className=\"border border-gray-300 rounded px-2 py-1\"\r\n+            >\r\n+              <option value=\"10\">10</option>\r\n+              <option value=\"20\">20</option>\r\n+              <option value=\"50\">50</option>\r\n+            </select>\r\n+          </div>\r\n+\r\n+          <div className=\"flex flex-wrap items-center gap-2\">\r\n+            <label htmlFor=\"page\">Go to:</label>\r\n+            <input\r\n+              type=\"number\"\r\n+              id=\"page\"\r\n+              min=\"1\"\r\n+              max={totalPages}\r\n+              value={currentPage}\r\n+              onChange={(e) => goToPage(Number(e.target.value))}\r\n+              className=\"w-14 h-10 text-center font-semibold text-yellow-600 rounded-lg bg-yellow-50 focus:outline-none border\"\r\n+            />\r\n+            <span className=\"text-sm\">\r\n+              {startIndex + 1} - {endIndex} of {filteredUsers.length}\r\n+            </span>\r\n+\r\n+            <button\r\n+              onClick={() => goToPage(currentPage - 1)}\r\n+              disabled={currentPage === 1}\r\n+              className=\"w-10 h-10 border rounded-lg flex items-center justify-center disabled:opacity-50\"\r\n+            >\r\n+              <FaChevronLeft className=\"text-gray-700\" />\r\n+            </button>\r\n+\r\n+            <button\r\n+              onClick={() => goToPage(currentPage + 1)}\r\n+              disabled={currentPage === totalPages}\r\n+              className=\"w-10 h-10 border rounded-lg flex items-center justify-center disabled:opacity-50\"\r\n+            >\r\n+              <FaChevronRight className=\"text-gray-700\" />\r\n+            </button>\r\n+          </div>\r\n+        </div>\r\n       </div>\r\n+\r\n+      {/* Modal */}\r\n+      <ConfirmModal\r\n+        isOpen={showModal}\r\n+        onCancel={() => setShowModal(false)}\r\n+        onConfirm={handleDelete}\r\n+        message=\"You want to delete this user?\"\r\n+        confirmLabel=\"Delete\"\r\n+        type=\"delete\"\r\n+      />\r\n     </AdminLayout>\r\n   );\r\n };\r\n \r\n-export default UserList;\n+export default UserTable;\r\n"
                },
                {
                    "date": 1753698846124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,37 @@\n   const [searchTerm, setSearchTerm] = useState(\"\");\r\n   const [currentPage, setCurrentPage] = useState(1);\r\n   const [rowsPerPage, setRowsPerPage] = useState(10);\r\n   const [showModal, setShowModal] = useState(false);\r\n+  const [selectedUserId, setSelectedUserId] = useState(null);\r\n \r\n+  // Fetch users from API\r\n+  useEffect(() => {\r\n+    fetchUsers();\r\n+  }, []);\r\n+\r\n+  const fetchUsers = async () => {\r\n+    try {\r\n+      setLoading(true);\r\n+      const token = localStorage.getItem(\"token\");\r\n+      const res = await fetch(`${import.meta.env.VITE_AUTH_API_URL}/admin/users`, {\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`,\r\n+        },\r\n+      });\r\n+      const data = await res.json();\r\n+      if (res.ok) {\r\n+        setUsers(data.users || []);\r\n+      } else {\r\n+        toast.error(data.error || \"Failed to fetch users\");\r\n+      }\r\n+    } catch (err) {\r\n+      toast.error(\"Server error\");\r\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n+\r\n   const filteredUsers = users.filter((user) =>\r\n     `${user.username} ${user.email} ${user.role} ${user.status}`\r\n       .toLowerCase()\r\n       .includes(searchTerm.toLowerCase())\r\n@@ -228,5 +256,5 @@\n     </AdminLayout>\r\n   );\r\n };\r\n \r\n-export default UserTable;\n\\ No newline at end of file\n+export default UserTable;\r\n"
                },
                {
                    "date": 1753698857149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,18 +70,54 @@\n     setRowsPerPage(Number(e.target.value));\r\n     setCurrentPage(1);\r\n   };\r\n \r\n-  const handleToggle = (index) => {\r\n-    const updatedUsers = [...users];\r\n-    updatedUsers[index].status =\r\n-      updatedUsers[index].status === \"Active\" ? \"Inactive\" : \"Active\";\r\n-    setUsers(updatedUsers);\r\n+  const handleToggle = async (userId, currentBlocked) => {\r\n+    try {\r\n+      const token = localStorage.getItem(\"token\");\r\n+      const res = await fetch(`${import.meta.env.VITE_AUTH_API_URL}/admin/users/${userId}/block`, {\r\n+        method: \"PATCH\",\r\n+        headers: {\r\n+          \"Content-Type\": \"application/json\",\r\n+          Authorization: `Bearer ${token}`,\r\n+        },\r\n+        body: JSON.stringify({ blocked: !currentBlocked }),\r\n+      });\r\n+      const data = await res.json();\r\n+      if (res.ok) {\r\n+        toast.success(currentBlocked ? \"User unblocked\" : \"User blocked\");\r\n+        fetchUsers(); // Refresh the list\r\n+      } else {\r\n+        toast.error(data.error || \"Failed to update user status\");\r\n+      }\r\n+    } catch (err) {\r\n+      toast.error(\"Server error\");\r\n+    }\r\n   };\r\n \r\n-  const handleDelete = () => {\r\n-    console.log(\"Item deleted\");\r\n+  const handleDelete = async () => {\r\n+    if (!selectedUserId) return;\r\n+    \r\n+    try {\r\n+      const token = localStorage.getItem(\"token\");\r\n+      const res = await fetch(`${import.meta.env.VITE_AUTH_API_URL}/admin/users/${selectedUserId}`, {\r\n+        method: \"DELETE\",\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`,\r\n+        },\r\n+      });\r\n+      const data = await res.json();\r\n+      if (res.ok) {\r\n+        toast.success(\"User deleted successfully\");\r\n+        fetchUsers(); // Refresh the list\r\n+      } else {\r\n+        toast.error(data.error || \"Failed to delete user\");\r\n+      }\r\n+    } catch (err) {\r\n+      toast.error(\"Server error\");\r\n+    }\r\n     setShowModal(false);\r\n+    setSelectedUserId(null);\r\n   };\r\n \r\n   return (\r\n     <AdminLayout>\r\n"
                },
                {
                    "date": 1753698863560,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n       <div className=\"p-4 sm:p-6 bg-white rounded-xl shadow-md overflow-x-auto\">\r\n         {/* Top Controls */}\r\n         <div className=\"flex flex-col md:flex-row justify-between gap-4 mb-4\">\r\n           <p className=\"text-sm md:text-base\">\r\n-            {filteredUsers.length} Records Found\r\n+            {loading ? \"Loading...\" : `${filteredUsers.length} Records Found`}\r\n           </p>\r\n \r\n           <div className=\"flex flex-col sm:flex-row gap-2 items-start sm:items-center justify-end\">\r\n             <div className=\"flex items-center border border-gray-300 rounded-md overflow-hidden w-full sm:w-auto\">\r\n"
                },
                {
                    "date": 1753698887097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,61 +163,75 @@\n                 <th className=\"px-4 py-2\">ACTIONS ↓</th>\r\n               </tr>\r\n             </thead>\r\n             <tbody>\r\n-              {paginatedUsers.length === 0 ? (\r\n+              {loading ? (\r\n                 <tr>\r\n+                  <td colSpan=\"6\" className=\"text-center py-4\">\r\n+                    <div className=\"flex items-center justify-center\">\r\n+                      <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-yellow-400\"></div>\r\n+                      <span className=\"ml-2\">Loading users...</span>\r\n+                    </div>\r\n+                  </td>\r\n+                </tr>\r\n+              ) : paginatedUsers.length === 0 ? (\r\n+                <tr>\r\n                   <td colSpan=\"6\" className=\"text-center py-4 text-red-500\">\r\n                     No users match your search.\r\n                   </td>\r\n                 </tr>\r\n               ) : (\r\n-                paginatedUsers.map((user, index) => (\r\n-                  <tr key={index} className=\"bg-white shadow rounded-lg\">\r\n+                paginatedUsers.map((user) => (\r\n+                  <tr key={user._id} className=\"bg-white shadow rounded-lg\">\r\n                     <td className=\"px-4 py-2 font-medium\">{user.username}</td>\r\n                     <td className=\"px-4 py-2\">{user.email}</td>\r\n                     <td className=\"px-4 py-2\">{user.role}</td>\r\n                     <td className=\"px-4 py-2\">\r\n                       <span\r\n                         className={`font-semibold ${\r\n-                          user.status === \"Active\"\r\n+                          !user.blocked\r\n                             ? \"text-green-600\"\r\n                             : \"text-red-600\"\r\n                         }`}\r\n                       >\r\n-                        {user.status}\r\n+                        {user.blocked ? \"Blocked\" : \"Active\"}\r\n                       </span>\r\n                     </td>\r\n                     <td className=\"px-4 py-2\">\r\n                       <button\r\n-                        onClick={() => handleToggle(index)}\r\n+                        onClick={() => handleToggle(user._id, user.blocked)}\r\n                         className={`w-12 h-6 flex items-center rounded-full p-1 transition-colors duration-300 ${\r\n-                          user.status === \"Active\"\r\n+                          !user.blocked\r\n                             ? \"bg-green-500\"\r\n                             : \"bg-gray-300\"\r\n                         }`}\r\n                       >\r\n                         <div\r\n                           className={`w-4 h-4 rounded-full bg-white shadow-md transform transition-transform duration-300 ${\r\n-                            user.status === \"Active\"\r\n+                            !user.blocked\r\n                               ? \"translate-x-6\"\r\n                               : \"translate-x-0\"\r\n                           }`}\r\n                         ></div>\r\n                       </button>\r\n                     </td>\r\n                     <td className=\"px-4 py-2\">\r\n                       <div className=\"flex flex-col sm:flex-row gap-2\">\r\n-                        <button className=\"bg-yellow-400 hover:bg-yellow-500 text-white p-2 rounded\">\r\n-                          <FaEye />\r\n-                        </button>\r\n-                        <Link to=\"edituser\">\r\n+                        <Link to={`/admin/users/${user._id}`}>\r\n+                          <button className=\"bg-yellow-400 hover:bg-yellow-500 text-white p-2 rounded\">\r\n+                            <FaEye />\r\n+                          </button>\r\n+                        </Link>\r\n+                        <Link to={`/admin/users/${user._id}/edit`}>\r\n                           <button className=\"bg-blue-500 hover:bg-blue-600 text-white p-2 rounded\">\r\n                             <FaEdit />\r\n                           </button>\r\n                         </Link>\r\n                         <button\r\n-                          onClick={() => setShowModal(true)}\r\n+                          onClick={() => {\r\n+                            setSelectedUserId(user._id);\r\n+                            setShowModal(true);\r\n+                          }}\r\n                           className=\"bg-red-500 hover:bg-red-600 text-white p-2 rounded\"\r\n                         >\r\n                           <FaTrash />\r\n                         </button>\r\n"
                },
                {
                    "date": 1753698894217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,10 @@\n } from \"react-icons/fa\";\r\n import { Link } from \"react-router-dom\";\r\n import AdminLayout from \"../components/AdminLayout\";\r\n import ConfirmModal from \"../components/ConfirmModal\";\r\n-import { toast } from \"react-toastify\";\r\n+import { toast, ToastContainer } from \"react-toastify\";\r\n+import \"react-toastify/dist/ReactToastify.css\";\r\n \r\n const UserTable = () => {\r\n   const [users, setUsers] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n"
                },
                {
                    "date": 1753698904224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,8 +121,9 @@\n   };\r\n \r\n   return (\r\n     <AdminLayout>\r\n+      <ToastContainer />\r\n       <div className=\"p-4 sm:p-6 bg-white rounded-xl shadow-md overflow-x-auto\">\r\n         {/* Top Controls */}\r\n         <div className=\"flex flex-col md:flex-row justify-between gap-4 mb-4\">\r\n           <p className=\"text-sm md:text-base\">\r\n"
                },
                {
                    "date": 1753699338043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n   const [rowsPerPage, setRowsPerPage] = useState(10);\r\n   const [showModal, setShowModal] = useState(false);\r\n   const [selectedUserId, setSelectedUserId] = useState(null);\r\n \r\n-  // Fetch users from API\r\n+  \r\n   useEffect(() => {\r\n     fetchUsers();\r\n   }, []);\r\n \r\n"
                },
                {
                    "date": 1753699346049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,9 +85,9 @@\n       });\r\n       const data = await res.json();\r\n       if (res.ok) {\r\n         toast.success(currentBlocked ? \"User unblocked\" : \"User blocked\");\r\n-        fetchUsers(); // Refresh the list\r\n+        fetchUsers(); \r\n       } else {\r\n         toast.error(data.error || \"Failed to update user status\");\r\n       }\r\n     } catch (err) {\r\n"
                },
                {
                    "date": 1753699353204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n       });\r\n       const data = await res.json();\r\n       if (res.ok) {\r\n         toast.success(\"User deleted successfully\");\r\n-        fetchUsers(); // Refresh the list\r\n+        fetchUsers(); \r\n       } else {\r\n         toast.error(data.error || \"Failed to delete user\");\r\n       }\r\n     } catch (err) {\r\n@@ -123,9 +123,8 @@\n   return (\r\n     <AdminLayout>\r\n       <ToastContainer />\r\n       <div className=\"p-4 sm:p-6 bg-white rounded-xl shadow-md overflow-x-auto\">\r\n-        {/* Top Controls */}\r\n         <div className=\"flex flex-col md:flex-row justify-between gap-4 mb-4\">\r\n           <p className=\"text-sm md:text-base\">\r\n             {loading ? \"Loading...\" : `${filteredUsers.length} Records Found`}\r\n           </p>\r\n"
                },
                {
                    "date": 1753699361731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -150,9 +150,8 @@\n             />\r\n           </div>\r\n         </div>\r\n \r\n-        {/* Table */}\r\n         <div className=\"overflow-x-auto\">\r\n           <table className=\"min-w-full text-sm border-separate border-spacing-y-2\">\r\n             <thead className=\"bg-gray-100 text-gray-700 text-left\">\r\n               <tr>\r\n@@ -244,9 +243,8 @@\n             </tbody>\r\n           </table>\r\n         </div>\r\n \r\n-        {/* Pagination */}\r\n         <div className=\"flex flex-col md:flex-row justify-between items-center mt-6 gap-4\">\r\n           <div className=\"flex gap-2 items-center\">\r\n             <label htmlFor=\"rows\">Show rows:</label>\r\n             <select\r\n"
                },
                {
                    "date": 1753761083063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,13 @@\n   const [currentPage, setCurrentPage] = useState(1);\r\n   const [rowsPerPage, setRowsPerPage] = useState(10);\r\n   const [showModal, setShowModal] = useState(false);\r\n   const [selectedUserId, setSelectedUserId] = useState(null);\r\n+  const [showFilters, setShowFilters] = useState(false);\r\n+  const [filters, setFilters] = useState({\r\n+    role: \"\",\r\n+    status: \"\",\r\n+  });\r\n \r\n   \r\n   useEffect(() => {\r\n     fetchUsers();\r\n@@ -292,9 +297,8 @@\n           </div>\r\n         </div>\r\n       </div>\r\n \r\n-      {/* Modal */}\r\n       <ConfirmModal\r\n         isOpen={showModal}\r\n         onCancel={() => setShowModal(false)}\r\n         onConfirm={handleDelete}\r\n"
                },
                {
                    "date": 1753761088330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,13 +54,24 @@\n       setLoading(false);\r\n     }\r\n   };\r\n \r\n-  const filteredUsers = users.filter((user) =>\r\n-    `${user.username} ${user.email} ${user.role} ${user.status}`\r\n+  const filteredUsers = users.filter((user) => {\r\n+    // Search term filter\r\n+    const searchMatch = `${user.username} ${user.email} ${user.role} ${user.blocked ? 'blocked' : 'active'}`\r\n       .toLowerCase()\r\n-      .includes(searchTerm.toLowerCase())\r\n-  );\r\n+      .includes(searchTerm.toLowerCase());\r\n+    \r\n+    // Role filter\r\n+    const roleMatch = !filters.role || user.role === filters.role;\r\n+    \r\n+    // Status filter\r\n+    const statusMatch = !filters.status || \r\n+      (filters.status === 'active' && !user.blocked) ||\r\n+      (filters.status === 'blocked' && user.blocked);\r\n+    \r\n+    return searchMatch && roleMatch && statusMatch;\r\n+  });\r\n \r\n   const totalPages = Math.ceil(filteredUsers.length / rowsPerPage);\r\n   const startIndex = (currentPage - 1) * rowsPerPage;\r\n   const endIndex = Math.min(startIndex + rowsPerPage, filteredUsers.length);\r\n"
                },
                {
                    "date": 1753761093962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -158,13 +158,19 @@\n                 }}\r\n               />\r\n               <FaSearch className=\"text-gray-500 mx-2\" />\r\n             </div>\r\n-            <img\r\n-              src=\"/filter.png\"\r\n-              alt=\"Filter\"\r\n-              className=\"w-10 h-10 cursor-pointer\"\r\n-            />\r\n+            <button\r\n+              onClick={() => setShowFilters(!showFilters)}\r\n+              className=\"flex items-center gap-2 bg-gradient-to-r from-yellow-400 to-yellow-600 hover:from-yellow-500 hover:to-yellow-700 text-white px-4 py-2 rounded-lg transition-all duration-200 shadow-md\"\r\n+            >\r\n+              <img\r\n+                src=\"/filter.png\"\r\n+                alt=\"Filter\"\r\n+                className=\"w-5 h-5\"\r\n+              />\r\n+              {showFilters ? \"Hide Filters\" : \"Filters\"}\r\n+            </button>\r\n           </div>\r\n         </div>\r\n \r\n         <div className=\"overflow-x-auto\">\r\n"
                },
                {
                    "date": 1753761107003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,8 +172,59 @@\n             </button>\r\n           </div>\r\n         </div>\r\n \r\n+        {/* Filter Panel */}\r\n+        {showFilters && (\r\n+          <div className=\"bg-gray-50 p-6 rounded-xl mb-6 border border-gray-200\">\r\n+            <h3 className=\"text-lg font-semibold mb-4 text-gray-800\">Filter Options</h3>\r\n+            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n+              <div>\r\n+                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Role</label>\r\n+                <select\r\n+                  value={filters.role}\r\n+                  onChange={(e) => setFilters({ ...filters, role: e.target.value })}\r\n+                  className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-yellow-400\"\r\n+                >\r\n+                  <option value=\"\">All Roles</option>\r\n+                  <option value=\"admin\">Admin</option>\r\n+                  <option value=\"cashier\">Cashier</option>\r\n+                  <option value=\"user\">User</option>\r\n+                </select>\r\n+              </div>\r\n+              <div>\r\n+                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Status</label>\r\n+                <select\r\n+                  value={filters.status}\r\n+                  onChange={(e) => setFilters({ ...filters, status: e.target.value })}\r\n+                  className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-yellow-400\"\r\n+                >\r\n+                  <option value=\"\">All Status</option>\r\n+                  <option value=\"active\">Active</option>\r\n+                  <option value=\"blocked\">Blocked</option>\r\n+                </select>\r\n+              </div>\r\n+            </div>\r\n+            <div className=\"flex justify-end gap-4 mt-4\">\r\n+              <button\r\n+                onClick={() => {\r\n+                  setFilters({ role: \"\", status: \"\" });\r\n+                  setCurrentPage(1);\r\n+                }}\r\n+                className=\"bg-gray-100 hover:bg-gray-200 text-gray-800 px-4 py-2 rounded-lg transition-all duration-200\"\r\n+              >\r\n+                Clear Filters\r\n+              </button>\r\n+              <button\r\n+                onClick={() => setShowFilters(false)}\r\n+                className=\"bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white px-4 py-2 rounded-lg transition-all duration-200 shadow-md\"\r\n+              >\r\n+                Apply Filters\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        )}\r\n+\r\n         <div className=\"overflow-x-auto\">\r\n           <table className=\"min-w-full text-sm border-separate border-spacing-y-2\">\r\n             <thead className=\"bg-gray-100 text-gray-700 text-left\">\r\n               <tr>\r\n"
                }
            ],
            "date": 1751537598253,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AdminLayout from \"../components/AdminLayout\";\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const token = localStorage.getItem(\"token\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch(`${import.meta.env.VITE_AUTH_API_URL}/admin/users`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => setUsers(data.users || []));\r\n  }, []);\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <h1 className=\"text-2xl font-bold mb-6\">Users</h1>\r\n      <table className=\"w-full border\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"border px-2 py-1\">Username</th>\r\n            <th className=\"border px-2 py-1\">Email</th>\r\n            <th className=\"border px-2 py-1\">Role</th>\r\n            <th className=\"border px-2 py-1\">Status</th>\r\n            <th className=\"border px-2 py-1\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((u) => (\r\n            <tr key={u._id}>\r\n              <td className=\"border px-2 py-1\">{u.username}</td>\r\n              <td className=\"border px-2 py-1\">{u.email}</td>\r\n              <td className=\"border px-2 py-1\">{u.role}</td>\r\n              <td className=\"border px-2 py-1\">{u.blocked ? \"Blocked\" : \"Active\"}</td>\r\n              <td className=\"border px-2 py-1\">\r\n                <button\r\n                  onClick={() => navigate(`/admin/users/${u._id}`)}\r\n                  className=\"text-blue-600 underline\"\r\n                >\r\n                  View\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default UserList;"
        }
    ]
}