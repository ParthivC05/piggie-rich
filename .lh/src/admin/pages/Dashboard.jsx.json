{
    "sourceFile": "src/admin/pages/Dashboard.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1751515282552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1751516403541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n         const depositsData = await depositsRes.json();\r\n         setUsers(usersData.users || []);\r\n         setDeposits(depositsData.deposits || []);\r\n       } catch (err) {\r\n-        // handle error\r\n+        \r\n       }\r\n       setLoading(false);\r\n     };\r\n     fetchData();\r\n"
                },
                {
                    "date": 1751516584866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,63 +23,81 @@\n         const depositsData = await depositsRes.json();\r\n         setUsers(usersData.users || []);\r\n         setDeposits(depositsData.deposits || []);\r\n       } catch (err) {\r\n-        \r\n+        console.error(\"Error fetching admin data\", err);\r\n       }\r\n       setLoading(false);\r\n     };\r\n     fetchData();\r\n   }, []);\r\n \r\n-  if (loading) return <div className=\"p-8\">Loading...</div>;\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"flex items-center justify-center h-screen\">\r\n+        <div className=\"text-xl font-semibold animate-pulse\">Loading Admin Data...</div>\r\n+      </div>\r\n+    );\r\n+  }\r\n \r\n   return (\r\n-    <div className=\"p-8\">\r\n-      <h1 className=\"text-2xl font-bold mb-6\">Admin Dashboard</h1>\r\n-      <h2 className=\"text-xl font-semibold mb-2\">Users</h2>\r\n-      <table className=\"mb-8 w-full border\">\r\n-        <thead>\r\n-          <tr>\r\n-            <th className=\"border px-2 py-1\">Username</th>\r\n-            <th className=\"border px-2 py-1\">Email</th>\r\n-            <th className=\"border px-2 py-1\">Role</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {users.map((u) => (\r\n-            <tr key={u._id}>\r\n-              <td className=\"border px-2 py-1\">{u.username}</td>\r\n-              <td className=\"border px-2 py-1\">{u.email}</td>\r\n-              <td className=\"border px-2 py-1\">{u.role}</td>\r\n-            </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n-      <h2 className=\"text-xl font-semibold mb-2\">Deposits</h2>\r\n-      <table className=\"w-full border\">\r\n-        <thead>\r\n-          <tr>\r\n-            <th className=\"border px-2 py-1\">User</th>\r\n-            <th className=\"border px-2 py-1\">Email</th>\r\n-            <th className=\"border px-2 py-1\">Game</th>\r\n-            <th className=\"border px-2 py-1\">Amount</th>\r\n-            <th className=\"border px-2 py-1\">Date</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {deposits.map((d) => (\r\n-            <tr key={d._id}>\r\n-              <td className=\"border px-2 py-1\">{d.userId?.username}</td>\r\n-              <td className=\"border px-2 py-1\">{d.userId?.email}</td>\r\n-              <td className=\"border px-2 py-1\">{d.game}</td>\r\n-              <td className=\"border px-2 py-1\">${d.amount}</td>\r\n-              <td className=\"border px-2 py-1\">{new Date(d.createdAt).toLocaleString()}</td>\r\n-            </tr>\r\n\\ No newline at end of file\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n+    <div className=\"p-6 bg-gradient-to-br from-gray-100 to-white min-h-screen\">\r\n+      <h1 className=\"text-3xl font-bold mb-8 text-center text-blue-700\">Admin Dashboard</h1>\r\n+\r\n+      {/* Users Section */}\r\n+      <div className=\"bg-white rounded-2xl shadow-lg p-6 mb-10\">\r\n+        <h2 className=\"text-2xl font-semibold mb-4 text-gray-700\">Users</h2>\r\n+        <div className=\"overflow-x-auto\">\r\n+          <table className=\"w-full border-collapse text-sm\">\r\n+            <thead>\r\n+              <tr className=\"bg-blue-100 text-gray-700\">\r\n+                <th className=\"border px-4 py-2\">Username</th>\r\n+                <th className=\"border px-4 py-2\">Email</th>\r\n+                <th className=\"border px-4 py-2\">Role</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody>\r\n+              {users.map((u, idx) => (\r\n+                <tr key={u._id} className={idx % 2 === 0 ? \"bg-gray-50\" : \"\"}>\r\n+                  <td className=\"border px-4 py-2\">{u.username}</td>\r\n+                  <td className=\"border px-4 py-2\">{u.email}</td>\r\n+                  <td className=\"border px-4 py-2 capitalize\">{u.role}</td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Deposits Section */}\r\n+      <div className=\"bg-white rounded-2xl shadow-lg p-6\">\r\n+        <h2 className=\"text-2xl font-semibold mb-4 text-gray-700\">Deposits</h2>\r\n+        <div className=\"overflow-x-auto\">\r\n+          <table className=\"w-full border-collapse text-sm\">\r\n+            <thead>\r\n+              <tr className=\"bg-green-100 text-gray-700\">\r\n+                <th className=\"border px-4 py-2\">User</th>\r\n+                <th className=\"border px-4 py-2\">Email</th>\r\n+                <th className=\"border px-4 py-2\">Game</th>\r\n+                <th className=\"border px-4 py-2\">Amount</th>\r\n+                <th className=\"border px-4 py-2\">Date</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody>\r\n+              {deposits.map((d, idx) => (\r\n+                <tr key={d._id} className={idx % 2 === 0 ? \"bg-gray-50\" : \"\"}>\r\n+                  <td className=\"border px-4 py-2\">{d.userId?.username}</td>\r\n+                  <td className=\"border px-4 py-2\">{d.userId?.email}</td>\r\n+                  <td className=\"border px-4 py-2\">{d.game}</td>\r\n+                  <td className=\"border px-4 py-2 text-green-600\">${d.amount}</td>\r\n+                  <td className=\"border px-4 py-2\">{new Date(d.createdAt).toLocaleString()}</td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+      </div>\r\n     </div>\r\n   );\r\n };\r\n \r\n-export default AdminDashboard;\n+export default AdminDashboard;\r\n"
                },
                {
                    "date": 1751516669542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,12 +2,14 @@\n \r\n const AdminDashboard = () => {\r\n   const [users, setUsers] = useState([]);\r\n   const [deposits, setDeposits] = useState([]);\r\n+  const [searchTerm, setSearchTerm] = useState(\"\");\r\n   const [loading, setLoading] = useState(true);\r\n \r\n+  const token = localStorage.getItem(\"token\");\r\n+\r\n   useEffect(() => {\r\n-    const token = localStorage.getItem(\"token\");\r\n     if (!token) return;\r\n \r\n     const fetchData = async () => {\r\n       try {\r\n@@ -30,73 +32,112 @@\n     };\r\n     fetchData();\r\n   }, []);\r\n \r\n-  if (loading) {\r\n-    return (\r\n-      <div className=\"flex items-center justify-center h-screen\">\r\n-        <div className=\"text-xl font-semibold animate-pulse\">Loading Admin Data...</div>\r\n-      </div>\r\n-    );\r\n-  }\r\n+  const handleDelete = async (userId) => {\r\n+    try {\r\n+      await fetch(`${import.meta.env.VITE_AUTH_API_URL}/admin/users/${userId}`, {\r\n+        method: \"DELETE\",\r\n+        headers: { Authorization: `Bearer ${token}` },\r\n+      });\r\n+      setUsers(users.filter((u) => u._id !== userId));\r\n+    } catch (error) {\r\n+      console.error(\"Delete failed:\", error);\r\n+    }\r\n+  };\r\n \r\n+  const handleBlockToggle = async (userId, isBlocked) => {\r\n+    try {\r\n+      await fetch(`${import.meta.env.VITE_AUTH_API_URL}/admin/users/${userId}/block`, {\r\n+        method: \"PATCH\",\r\n+        headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({ blocked: !isBlocked }),\r\n+      });\r\n+      setUsers(users.map((u) => (u._id === userId ? { ...u, blocked: !isBlocked } : u)));\r\n+    } catch (error) {\r\n+      console.error(\"Block/Unblock failed:\", error);\r\n+    }\r\n+  };\r\n+\r\n+  const filteredUsers = users.filter(\r\n+    (u) =>\r\n+      u.username.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n+      u.email.toLowerCase().includes(searchTerm.toLowerCase())\r\n+  );\r\n+\r\n+  if (loading) return <div className=\"p-8\">Loading...</div>;\r\n+\r\n   return (\r\n-    <div className=\"p-6 bg-gradient-to-br from-gray-100 to-white min-h-screen\">\r\n-      <h1 className=\"text-3xl font-bold mb-8 text-center text-blue-700\">Admin Dashboard</h1>\r\n+    <div className=\"p-6\">\r\n+      <h1 className=\"text-3xl font-bold mb-6 text-blue-700\">Admin Dashboard</h1>\r\n \r\n-      {/* Users Section */}\r\n-      <div className=\"bg-white rounded-2xl shadow-lg p-6 mb-10\">\r\n-        <h2 className=\"text-2xl font-semibold mb-4 text-gray-700\">Users</h2>\r\n+      {/* Search */}\r\n+      <div className=\"mb-4\">\r\n+        <input\r\n+          type=\"text\"\r\n+          placeholder=\"Search by username or email\"\r\n+          value={searchTerm}\r\n+          onChange={(e) => setSearchTerm(e.target.value)}\r\n+          className=\"px-4 py-2 border rounded w-full md:w-1/3\"\r\n+        />\r\n+      </div>\r\n+\r\n+      {/* Users */}\r\n+      <div className=\"bg-white rounded-xl shadow p-6\">\r\n+        <h2 className=\"text-xl font-semibold mb-4\">Users</h2>\r\n         <div className=\"overflow-x-auto\">\r\n-          <table className=\"w-full border-collapse text-sm\">\r\n+          <table className=\"w-full border-collapse\">\r\n             <thead>\r\n-              <tr className=\"bg-blue-100 text-gray-700\">\r\n+              <tr className=\"bg-gray-100\">\r\n                 <th className=\"border px-4 py-2\">Username</th>\r\n                 <th className=\"border px-4 py-2\">Email</th>\r\n                 <th className=\"border px-4 py-2\">Role</th>\r\n+                <th className=\"border px-4 py-2\">Actions</th>\r\n               </tr>\r\n             </thead>\r\n             <tbody>\r\n-              {users.map((u, idx) => (\r\n-                <tr key={u._id} className={idx % 2 === 0 ? \"bg-gray-50\" : \"\"}>\r\n+              {filteredUsers.map((u) => (\r\n+                <tr key={u._id} className=\"hover:bg-gray-50\">\r\n                   <td className=\"border px-4 py-2\">{u.username}</td>\r\n                   <td className=\"border px-4 py-2\">{u.email}</td>\r\n                   <td className=\"border px-4 py-2 capitalize\">{u.role}</td>\r\n+                  <td className=\"border px-4 py-2 space-x-2\">\r\n+                    <button\r\n+                      onClick={() => alert(`Edit user ${u.username}`)}\r\n+                      className=\"px-3 py-1 text-sm bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n+                    >\r\n+                      Edit\r\n+                    </button>\r\n+                    <button\r\n+                      onClick={() => handleDelete(u._id)}\r\n+                      className=\"px-3 py-1 text-sm bg-red-500 text-white rounded hover:bg-red-600\"\r\n+                    >\r\n+                      Delete\r\n+                    </button>\r\n+                    <button\r\n+                      onClick={() => handleBlockToggle(u._id, u.blocked)}\r\n+                      className={`px-3 py-1 text-sm ${\r\n+                        u.blocked ? \"bg-green-500 hover:bg-green-600\" : \"bg-yellow-500 hover:bg-yellow-600\"\r\n+                      } text-white rounded`}\r\n+                    >\r\n+                      {u.blocked ? \"Unblock\" : \"Block\"}\r\n+                    </button>\r\n+                    <button\r\n+                      onClick={() => alert(`Viewing activity logs for ${u.username}`)}\r\n+                      className=\"px-3 py-1 text-sm bg-gray-600 text-white rounded hover:bg-gray-700\"\r\n+                    >\r\n+                      Logs\r\n+                    </button>\r\n+                  </td>\r\n                 </tr>\r\n               ))}\r\n             </tbody>\r\n           </table>\r\n         </div>\r\n       </div>\r\n \r\n-      {/* Deposits Section */}\r\n-      <div className=\"bg-white rounded-2xl shadow-lg p-6\">\r\n-        <h2 className=\"text-2xl font-semibold mb-4 text-gray-700\">Deposits</h2>\r\n-        <div className=\"overflow-x-auto\">\r\n-          <table className=\"w-full border-collapse text-sm\">\r\n-            <thead>\r\n-              <tr className=\"bg-green-100 text-gray-700\">\r\n-                <th className=\"border px-4 py-2\">User</th>\r\n-                <th className=\"border px-4 py-2\">Email</th>\r\n-                <th className=\"border px-4 py-2\">Game</th>\r\n-                <th className=\"border px-4 py-2\">Amount</th>\r\n-                <th className=\"border px-4 py-2\">Date</th>\r\n-              </tr>\r\n-            </thead>\r\n-            <tbody>\r\n-              {deposits.map((d, idx) => (\r\n-                <tr key={d._id} className={idx % 2 === 0 ? \"bg-gray-50\" : \"\"}>\r\n-                  <td className=\"border px-4 py-2\">{d.userId?.username}</td>\r\n-                  <td className=\"border px-4 py-2\">{d.userId?.email}</td>\r\n-                  <td className=\"border px-4 py-2\">{d.game}</td>\r\n-                  <td className=\"border px-4 py-2 text-green-600\">${d.amount}</td>\r\n-                  <td className=\"border px-4 py-2\">{new Date(d.createdAt).toLocaleString()}</td>\r\n-                </tr>\r\n-              ))}\r\n-            </tbody>\r\n-          </table>\r\n-        </div>\r\n-      </div>\r\n+      {/* Deposits section unchanged */}\r\n+      {/* You can copy your existing deposits section here */}\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1751516769818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,17 +20,20 @@\n           fetch(`${import.meta.env.VITE_AUTH_API_URL}/admin/deposits`, {\r\n             headers: { Authorization: `Bearer ${token}` },\r\n           }),\r\n         ]);\r\n+\r\n         const usersData = await usersRes.json();\r\n         const depositsData = await depositsRes.json();\r\n+\r\n         setUsers(usersData.users || []);\r\n         setDeposits(depositsData.deposits || []);\r\n       } catch (err) {\r\n-        console.error(\"Error fetching admin data\", err);\r\n+        console.error(\"Error fetching data\", err);\r\n       }\r\n       setLoading(false);\r\n     };\r\n+\r\n     fetchData();\r\n   }, []);\r\n \r\n   const handleDelete = async (userId) => {\r\n@@ -48,9 +51,12 @@\n   const handleBlockToggle = async (userId, isBlocked) => {\r\n     try {\r\n       await fetch(`${import.meta.env.VITE_AUTH_API_URL}/admin/users/${userId}/block`, {\r\n         method: \"PATCH\",\r\n-        headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" },\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`,\r\n+          \"Content-Type\": \"application/json\",\r\n+        },\r\n         body: JSON.stringify({ blocked: !isBlocked }),\r\n       });\r\n       setUsers(users.map((u) => (u._id === userId ? { ...u, blocked: !isBlocked } : u)));\r\n     } catch (error) {\r\n@@ -63,44 +69,58 @@\n       u.username.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n       u.email.toLowerCase().includes(searchTerm.toLowerCase())\r\n   );\r\n \r\n-  if (loading) return <div className=\"p-8\">Loading...</div>;\r\n+  if (loading) {\r\n+    return (\r\n+      <div className=\"flex items-center justify-center h-screen\">\r\n+        <div className=\"text-xl font-semibold animate-pulse\">Loading Admin Data...</div>\r\n+      </div>\r\n+    );\r\n+  }\r\n \r\n   return (\r\n-    <div className=\"p-6\">\r\n-      <h1 className=\"text-3xl font-bold mb-6 text-blue-700\">Admin Dashboard</h1>\r\n+    <div className=\"p-6 bg-gray-100 min-h-screen\">\r\n+      <h1 className=\"text-3xl font-bold mb-6 text-center text-blue-700\">Admin Dashboard</h1>\r\n \r\n       {/* Search */}\r\n-      <div className=\"mb-4\">\r\n+      <div className=\"mb-6 flex justify-center\">\r\n         <input\r\n           type=\"text\"\r\n           placeholder=\"Search by username or email\"\r\n           value={searchTerm}\r\n           onChange={(e) => setSearchTerm(e.target.value)}\r\n-          className=\"px-4 py-2 border rounded w-full md:w-1/3\"\r\n+          className=\"px-4 py-2 border rounded w-full max-w-md\"\r\n         />\r\n       </div>\r\n \r\n-      {/* Users */}\r\n-      <div className=\"bg-white rounded-xl shadow p-6\">\r\n-        <h2 className=\"text-xl font-semibold mb-4\">Users</h2>\r\n+      {/* Users Table */}\r\n+      <div className=\"bg-white rounded-xl shadow p-6 mb-10\">\r\n+        <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Users</h2>\r\n         <div className=\"overflow-x-auto\">\r\n-          <table className=\"w-full border-collapse\">\r\n+          <table className=\"w-full text-sm border-collapse\">\r\n             <thead>\r\n-              <tr className=\"bg-gray-100\">\r\n+              <tr className=\"bg-gray-200 text-left\">\r\n                 <th className=\"border px-4 py-2\">Username</th>\r\n                 <th className=\"border px-4 py-2\">Email</th>\r\n                 <th className=\"border px-4 py-2\">Role</th>\r\n+                <th className=\"border px-4 py-2\">Status</th>\r\n                 <th className=\"border px-4 py-2\">Actions</th>\r\n               </tr>\r\n             </thead>\r\n             <tbody>\r\n-              {filteredUsers.map((u) => (\r\n-                <tr key={u._id} className=\"hover:bg-gray-50\">\r\n+              {filteredUsers.map((u, idx) => (\r\n+                <tr key={u._id} className={idx % 2 === 0 ? \"bg-gray-50\" : \"\"}>\r\n                   <td className=\"border px-4 py-2\">{u.username}</td>\r\n                   <td className=\"border px-4 py-2\">{u.email}</td>\r\n                   <td className=\"border px-4 py-2 capitalize\">{u.role}</td>\r\n+                  <td className=\"border px-4 py-2\">\r\n+                    {u.blocked ? (\r\n+                      <span className=\"text-red-500\">Blocked</span>\r\n+                    ) : (\r\n+                      <span className=\"text-green-600\">Active</span>\r\n+                    )}\r\n+                  </td>\r\n                   <td className=\"border px-4 py-2 space-x-2\">\r\n                     <button\r\n                       onClick={() => alert(`Edit user ${u.username}`)}\r\n                       className=\"px-3 py-1 text-sm bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n@@ -115,15 +135,15 @@\n                     </button>\r\n                     <button\r\n                       onClick={() => handleBlockToggle(u._id, u.blocked)}\r\n                       className={`px-3 py-1 text-sm ${\r\n-                        u.blocked ? \"bg-green-500 hover:bg-green-600\" : \"bg-yellow-500 hover:bg-yellow-600\"\r\n-                      } text-white rounded`}\r\n+                        u.blocked ? \"bg-green-500\" : \"bg-yellow-500\"\r\n+                      } text-white rounded hover:opacity-90`}\r\n                     >\r\n                       {u.blocked ? \"Unblock\" : \"Block\"}\r\n                     </button>\r\n                     <button\r\n-                      onClick={() => alert(`Viewing activity logs for ${u.username}`)}\r\n+                      onClick={() => alert(`View activity logs of ${u.username}`)}\r\n                       className=\"px-3 py-1 text-sm bg-gray-600 text-white rounded hover:bg-gray-700\"\r\n                     >\r\n                       Logs\r\n                     </button>\r\n@@ -134,10 +154,36 @@\n           </table>\r\n         </div>\r\n       </div>\r\n \r\n-      {/* Deposits section unchanged */}\r\n-      {/* You can copy your existing deposits section here */}\r\n+      {/* Deposits Section */}\r\n+      <div className=\"bg-white rounded-xl shadow p-6\">\r\n+        <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Deposits</h2>\r\n+        <div className=\"overflow-x-auto\">\r\n+          <table className=\"w-full text-sm border-collapse\">\r\n+            <thead>\r\n+              <tr className=\"bg-green-100 text-left\">\r\n+                <th className=\"border px-4 py-2\">User</th>\r\n+                <th className=\"border px-4 py-2\">Email</th>\r\n+                <th className=\"border px-4 py-2\">Game</th>\r\n+                <th className=\"border px-4 py-2\">Amount</th>\r\n+                <th className=\"border px-4 py-2\">Date</th>\r\n+              </tr>\r\n+            </thead>\r\n+            <tbody>\r\n+              {deposits.map((d, idx) => (\r\n+                <tr key={d._id} className={idx % 2 === 0 ? \"bg-gray-50\" : \"\"}>\r\n+                  <td className=\"border px-4 py-2\">{d.userId?.username}</td>\r\n+                  <td className=\"border px-4 py-2\">{d.userId?.email}</td>\r\n+                  <td className=\"border px-4 py-2\">{d.game}</td>\r\n+                  <td className=\"border px-4 py-2 text-green-600\">${d.amount}</td>\r\n+                  <td className=\"border px-4 py-2\">{new Date(d.createdAt).toLocaleString()}</td>\r\n+                </tr>\r\n+              ))}\r\n+            </tbody>\r\n+          </table>\r\n+        </div>\r\n+      </div>\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1751517174479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,12 @@\n   const [users, setUsers] = useState([]);\r\n   const [deposits, setDeposits] = useState([]);\r\n   const [searchTerm, setSearchTerm] = useState(\"\");\r\n   const [loading, setLoading] = useState(true);\r\n+  const [editUser, setEditUser] = useState(null);\r\n+  const [editForm, setEditForm] = useState({ username: \"\", email: \"\", role: \"\", phone: \"\" });\r\n+  const [logs, setLogs] = useState([]);\r\n+  const [logsUser, setLogsUser] = useState(null);\r\n \r\n   const token = localStorage.getItem(\"token\");\r\n \r\n   useEffect(() => {\r\n@@ -63,8 +67,44 @@\n       console.error(\"Block/Unblock failed:\", error);\r\n     }\r\n   };\r\n \r\n+  const handleEdit = (u) => {\r\n+    setEditUser(u);\r\n+    setEditForm({ username: u.username, email: u.email, role: u.role, phone: u.phone });\r\n+  };\r\n+\r\n+  const handleEditSave = async () => {\r\n+    try {\r\n+      await fetch(`${import.meta.env.VITE_AUTH_API_URL}/admin/users/${editUser._id}`, {\r\n+        method: \"PUT\",\r\n+        headers: {\r\n+          Authorization: `Bearer ${token}`,\r\n+          \"Content-Type\": \"application/json\",\r\n+        },\r\n+        body: JSON.stringify(editForm),\r\n+      });\r\n+      setUsers(users.map(u => u._id === editUser._id ? { ...u, ...editForm } : u));\r\n+      setEditUser(null);\r\n+    } catch (error) {\r\n+      console.error(\"Edit failed:\", error);\r\n+    }\r\n+  };\r\n+\r\n+  const handleLogs = async (u) => {\r\n+    try {\r\n+      const res = await fetch(`${import.meta.env.VITE_AUTH_API_URL}/admin/users/${u._id}/logs`, {\r\n+        headers: { Authorization: `Bearer ${token}` },\r\n+      });\r\n+      const data = await res.json();\r\n+      setLogs(data.logs || []);\r\n+      setLogsUser(u);\r\n+    } catch (error) {\r\n+      setLogs([]);\r\n+      setLogsUser(u);\r\n+    }\r\n+  };\r\n+\r\n   const filteredUsers = users.filter(\r\n     (u) =>\r\n       u.username.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n       u.email.toLowerCase().includes(searchTerm.toLowerCase())\r\n@@ -121,9 +161,9 @@\n                     )}\r\n                   </td>\r\n                   <td className=\"border px-4 py-2 space-x-2\">\r\n                     <button\r\n-                      onClick={() => alert(`Edit user ${u.username}`)}\r\n+                      onClick={() => handleEdit(u)}\r\n                       className=\"px-3 py-1 text-sm bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n                     >\r\n                       Edit\r\n                     </button>\r\n@@ -141,9 +181,9 @@\n                     >\r\n                       {u.blocked ? \"Unblock\" : \"Block\"}\r\n                     </button>\r\n                     <button\r\n-                      onClick={() => alert(`View activity logs of ${u.username}`)}\r\n+                      onClick={() => handleLogs(u)}\r\n                       className=\"px-3 py-1 text-sm bg-gray-600 text-white rounded hover:bg-gray-700\"\r\n                     >\r\n                       Logs\r\n                     </button>\r\n@@ -154,8 +194,81 @@\n           </table>\r\n         </div>\r\n       </div>\r\n \r\n+      {/* Edit Modal */}\r\n+      {editUser && (\r\n+        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\r\n+          <div className=\"bg-white p-6 rounded shadow w-full max-w-md\">\r\n+            <h2 className=\"text-lg font-bold mb-4\">Edit User</h2>\r\n+            <input\r\n+              className=\"border p-2 mb-2 w-full\"\r\n+              value={editForm.username}\r\n+              onChange={e => setEditForm(f => ({ ...f, username: e.target.value }))}\r\n+              placeholder=\"Username\"\r\n+            />\r\n+            <input\r\n+              className=\"border p-2 mb-2 w-full\"\r\n+              value={editForm.email}\r\n+              onChange={e => setEditForm(f => ({ ...f, email: e.target.value }))}\r\n+              placeholder=\"Email\"\r\n+            />\r\n+            <input\r\n+              className=\"border p-2 mb-2 w-full\"\r\n+              value={editForm.phone}\r\n+              onChange={e => setEditForm(f => ({ ...f, phone: e.target.value }))}\r\n+              placeholder=\"Phone\"\r\n+            />\r\n+            <select\r\n+              className=\"border p-2 mb-2 w-full\"\r\n+              value={editForm.role}\r\n+              onChange={e => setEditForm(f => ({ ...f, role: e.target.value }))}\r\n+            >\r\n+              <option value=\"user\">User</option>\r\n+              <option value=\"admin\">Admin</option>\r\n+              <option value=\"cashier\">Cashier</option>\r\n+            </select>\r\n+            <div className=\"flex gap-2\">\r\n+              <button\r\n+                className=\"bg-blue-500 text-white px-4 py-2 rounded\"\r\n+                onClick={handleEditSave}\r\n+              >\r\n+                Save\r\n+              </button>\r\n+              <button\r\n+                className=\"bg-gray-300 px-4 py-2 rounded\"\r\n+                onClick={() => setEditUser(null)}\r\n+              >\r\n+                Cancel\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n+\r\n+      {/* Logs Modal */}\r\n+      {logsUser && (\r\n+        <div className=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\">\r\n+          <div className=\"bg-white p-6 rounded shadow w-full max-w-md\">\r\n+            <h2 className=\"text-lg font-bold mb-4\">Activity Logs for {logsUser.username}</h2>\r\n+            <ul>\r\n+              {logs.length === 0 && <li>No logs found.</li>}\r\n+              {logs.map(log => (\r\n+                <li key={log._id}>\r\n+                  Deposit: ${log.amount} on {new Date(log.createdAt).toLocaleString()}\r\n+                </li>\r\n+              ))}\r\n+            </ul>\r\n+            <button\r\n+              className=\"bg-gray-300 px-4 py-2 rounded mt-4\"\r\n+              onClick={() => setLogsUser(null)}\r\n+            >\r\n+              Close\r\n+            </button>\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n+\r\n       {/* Deposits Section */}\r\n       <div className=\"bg-white rounded-xl shadow p-6\">\r\n         <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Deposits</h2>\r\n         <div className=\"overflow-x-auto\">\r\n@@ -186,5 +299,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default AdminDashboard;\r\n+export default AdminDashboard;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1751534074306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -267,9 +267,9 @@\n           </div>\r\n         </div>\r\n       )}\r\n \r\n-      {/* Deposits Section */}\r\n+      Deposits Section\r\n       <div className=\"bg-white rounded-xl shadow p-6\">\r\n         <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Deposits</h2>\r\n         <div className=\"overflow-x-auto\">\r\n           <table className=\"w-full text-sm border-collapse\">\r\n"
                },
                {
                    "date": 1751534165719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import React, { useEffect, useState } from \"react\";\r\n+import { useNavigate } from \"react-router-dom\";\r\n \r\n const AdminDashboard = () => {\r\n   const [users, setUsers] = useState([]);\r\n   const [deposits, setDeposits] = useState([]);\r\n@@ -10,8 +11,9 @@\n   const [logs, setLogs] = useState([]);\r\n   const [logsUser, setLogsUser] = useState(null);\r\n \r\n   const token = localStorage.getItem(\"token\");\r\n+  const navigate = useNavigate();\r\n \r\n   useEffect(() => {\r\n     if (!token) return;\r\n \r\n@@ -39,8 +41,13 @@\n \r\n     fetchData();\r\n   }, []);\r\n \r\n+  const handleLogout = () => {\r\n+    localStorage.removeItem(\"token\");\r\n+    navigate(\"/login\");\r\n+  };\r\n+\r\n   const handleDelete = async (userId) => {\r\n     try {\r\n       await fetch(`${import.meta.env.VITE_AUTH_API_URL}/admin/users/${userId}`, {\r\n         method: \"DELETE\",\r\n@@ -119,9 +126,17 @@\n   }\r\n \r\n   return (\r\n     <div className=\"p-6 bg-gray-100 min-h-screen\">\r\n-      <h1 className=\"text-3xl font-bold mb-6 text-center text-blue-700\">Admin Dashboard</h1>\r\n+      <div className=\"flex justify-between items-center mb-6\">\r\n+        <h1 className=\"text-3xl font-bold text-blue-700\">Admin Dashboard</h1>\r\n+        <button\r\n+          onClick={handleLogout}\r\n+          className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\r\n+        >\r\n+          Logout\r\n+        </button>\r\n+      </div>\r\n \r\n       {/* Search */}\r\n       <div className=\"mb-6 flex justify-center\">\r\n         <input\r\n@@ -267,9 +282,9 @@\n           </div>\r\n         </div>\r\n       )}\r\n \r\n-      Deposits Section\r\n+      {/* Deposits Section */}\r\n       <div className=\"bg-white rounded-xl shadow p-6\">\r\n         <h2 className=\"text-xl font-semibold mb-4 text-gray-700\">Deposits</h2>\r\n         <div className=\"overflow-x-auto\">\r\n           <table className=\"w-full text-sm border-collapse\">\r\n@@ -294,10 +309,5 @@\n               ))}\r\n             </tbody>\r\n           </table>\r\n         </div>\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default AdminDashboard;\n\\ No newline at end of file\n+      </div>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1751534196811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -309,5 +309,10 @@\n               ))}\r\n             </tbody>\r\n           </table>\r\n         </div>\r\n-      </div>\n\\ No newline at end of file\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default AdminDashboard;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1751535000550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n       <div className=\"flex justify-between items-center mb-6\">\r\n         <h1 className=\"text-3xl font-bold text-blue-700\">Admin Dashboard</h1>\r\n         <button\r\n           onClick={handleLogout}\r\n-          className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\r\n+          className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 hover\"\r\n         >\r\n           Logout\r\n         </button>\r\n       </div>\r\n"
                },
                {
                    "date": 1751535006617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -130,9 +130,9 @@\n       <div className=\"flex justify-between items-center mb-6\">\r\n         <h1 className=\"text-3xl font-bold text-blue-700\">Admin Dashboard</h1>\r\n         <button\r\n           onClick={handleLogout}\r\n-          className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 hover\"\r\n+          className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 hover:cursor-pointer\"\r\n         >\r\n           Logout\r\n         </button>\r\n       </div>\r\n"
                }
            ],
            "date": 1751515282552,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\n\r\nconst AdminDashboard = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [deposits, setDeposits] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) return;\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const [usersRes, depositsRes] = await Promise.all([\r\n          fetch(`${import.meta.env.VITE_AUTH_API_URL}/admin/users`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }),\r\n          fetch(`${import.meta.env.VITE_AUTH_API_URL}/admin/deposits`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }),\r\n        ]);\r\n        const usersData = await usersRes.json();\r\n        const depositsData = await depositsRes.json();\r\n        setUsers(usersData.users || []);\r\n        setDeposits(depositsData.deposits || []);\r\n      } catch (err) {\r\n        // handle error\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) return <div className=\"p-8\">Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"p-8\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Admin Dashboard</h1>\r\n      <h2 className=\"text-xl font-semibold mb-2\">Users</h2>\r\n      <table className=\"mb-8 w-full border\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"border px-2 py-1\">Username</th>\r\n            <th className=\"border px-2 py-1\">Email</th>\r\n            <th className=\"border px-2 py-1\">Role</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((u) => (\r\n            <tr key={u._id}>\r\n              <td className=\"border px-2 py-1\">{u.username}</td>\r\n              <td className=\"border px-2 py-1\">{u.email}</td>\r\n              <td className=\"border px-2 py-1\">{u.role}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <h2 className=\"text-xl font-semibold mb-2\">Deposits</h2>\r\n      <table className=\"w-full border\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"border px-2 py-1\">User</th>\r\n            <th className=\"border px-2 py-1\">Email</th>\r\n            <th className=\"border px-2 py-1\">Game</th>\r\n            <th className=\"border px-2 py-1\">Amount</th>\r\n            <th className=\"border px-2 py-1\">Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {deposits.map((d) => (\r\n            <tr key={d._id}>\r\n              <td className=\"border px-2 py-1\">{d.userId?.username}</td>\r\n              <td className=\"border px-2 py-1\">{d.userId?.email}</td>\r\n              <td className=\"border px-2 py-1\">{d.game}</td>\r\n              <td className=\"border px-2 py-1\">${d.amount}</td>\r\n              <td className=\"border px-2 py-1\">{new Date(d.createdAt).toLocaleString()}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"
        }
    ]
}