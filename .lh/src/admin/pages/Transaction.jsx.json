{
    "sourceFile": "src/admin/pages/Transaction.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1751537644713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1751544637599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,66 +2,136 @@\n import AdminLayout from \"../components/AdminLayout\";\r\n \r\n const Transactions = () => {\r\n   const [transactions, setTransactions] = useState([]);\r\n-  const [filter, setFilter] = useState({ userId: \"\", type: \"\", minAmount: \"\", maxAmount: \"\", startDate: \"\", endDate: \"\" });\r\n+  const [filter, setFilter] = useState({\r\n+    userId: \"\",\r\n+    type: \"\",\r\n+    minAmount: \"\",\r\n+    maxAmount: \"\",\r\n+    startDate: \"\",\r\n+    endDate: \"\",\r\n+  });\r\n   const token = localStorage.getItem(\"token\");\r\n \r\n   const fetchTransactions = async () => {\r\n     const params = new URLSearchParams();\r\n     Object.entries(filter).forEach(([k, v]) => v && params.append(k, v));\r\n-    const res = await fetch(`${import.meta.env.VITE_AUTH_API_URL}/admin/transactions?${params.toString()}`, {\r\n-      headers: { Authorization: `Bearer ${token}` }\r\n-    });\r\n+\r\n+    const res = await fetch(\r\n+      `${import.meta.env.VITE_AUTH_API_URL}/admin/transactions?${params.toString()}`,\r\n+      {\r\n+        headers: { Authorization: `Bearer ${token}` },\r\n+      }\r\n+    );\r\n     const data = await res.json();\r\n     setTransactions(data.transactions || []);\r\n   };\r\n \r\n-  useEffect(() => { fetchTransactions(); }, []);\r\n+  useEffect(() => {\r\n+    fetchTransactions();\r\n+  }, []);\r\n \r\n-  const handleFilterChange = e => setFilter({ ...filter, [e.target.name]: e.target.value });\r\n-  const handleFilterSubmit = e => { e.preventDefault(); fetchTransactions(); };\r\n+  const handleFilterChange = (e) =>\r\n+    setFilter({ ...filter, [e.target.name]: e.target.value });\r\n \r\n+  const handleFilterSubmit = (e) => {\r\n+    e.preventDefault();\r\n+    fetchTransactions();\r\n+  };\r\n+\r\n   return (\r\n     <AdminLayout>\r\n-      <h1 className=\"text-2xl font-bold mb-4\">Transactions</h1>\r\n-      <form className=\"flex flex-wrap gap-4 mb-4\" onSubmit={handleFilterSubmit}>\r\n-        <input name=\"userId\" placeholder=\"User ID\" value={filter.userId} onChange={handleFilterChange} className=\"border p-2 rounded\" />\r\n-        <select name=\"type\" value={filter.type} onChange={handleFilterChange} className=\"border p-2 rounded\">\r\n+      <div className=\"bg-gradient-to-br from-green-100 to-green-200 rounded-xl p-6 mb-8 shadow-inner\">\r\n+        <h1 className=\"text-3xl font-extrabold text-green-800\">Transactions</h1>\r\n+      </div>\r\n+\r\n+      <form\r\n+        className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-6 gap-4 mb-6\"\r\n+        onSubmit={handleFilterSubmit}\r\n+      >\r\n+        <input\r\n+          name=\"userId\"\r\n+          placeholder=\"User ID\"\r\n+          value={filter.userId}\r\n+          onChange={handleFilterChange}\r\n\\ No newline at end of file\n+          className=\"border p-2 rounded focus:outline-none focus:ring-2 focus:ring-green-400\"\r\n+        />\r\n+        <select\r\n+          name=\"type\"\r\n+          value={filter.type}\r\n+          onChange={handleFilterChange}\r\n+          className=\"border p-2 rounded focus:outline-none focus:ring-2 focus:ring-green-400\"\r\n+        >\r\n           <option value=\"\">All Types</option>\r\n           <option value=\"deposit\">Deposit</option>\r\n           <option value=\"redemption\">Redemption</option>\r\n           <option value=\"gameplay\">Gameplay</option>\r\n         </select>\r\n-        <input name=\"minAmount\" type=\"number\" placeholder=\"Min Amount\" value={filter.minAmount} onChange={handleFilterChange} className=\"border p-2 rounded w-32\" />\r\n-        <input name=\"maxAmount\" type=\"number\" placeholder=\"Max Amount\" value={filter.maxAmount} onChange={handleFilterChange} className=\"border p-2 rounded w-32\" />\r\n-        <input name=\"startDate\" type=\"date\" value={filter.startDate} onChange={handleFilterChange} className=\"border p-2 rounded\" />\r\n-        <input name=\"endDate\" type=\"date\" value={filter.endDate} onChange={handleFilterChange} className=\"border p-2 rounded\" />\r\n-        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">Filter</button>\r\n+        <input\r\n+          name=\"minAmount\"\r\n+          type=\"number\"\r\n+          placeholder=\"Min Amount\"\r\n+          value={filter.minAmount}\r\n+          onChange={handleFilterChange}\r\n+          className=\"border p-2 rounded w-full focus:outline-none focus:ring-2 focus:ring-green-400\"\r\n+        />\r\n+        <input\r\n+          name=\"maxAmount\"\r\n+          type=\"number\"\r\n+          placeholder=\"Max Amount\"\r\n+          value={filter.maxAmount}\r\n+          onChange={handleFilterChange}\r\n+          className=\"border p-2 rounded w-full focus:outline-none focus:ring-2 focus:ring-green-400\"\r\n+        />\r\n+        <input\r\n+          name=\"startDate\"\r\n+          type=\"date\"\r\n+          value={filter.startDate}\r\n+          onChange={handleFilterChange}\r\n+          className=\"border p-2 rounded focus:outline-none focus:ring-2 focus:ring-green-400\"\r\n+        />\r\n+        <input\r\n+          name=\"endDate\"\r\n+          type=\"date\"\r\n+          value={filter.endDate}\r\n+          onChange={handleFilterChange}\r\n+          className=\"border p-2 rounded focus:outline-none focus:ring-2 focus:ring-green-400\"\r\n+        />\r\n       </form>\r\n-      <table className=\"w-full border\">\r\n-        <thead>\r\n-          <tr>\r\n-            <th className=\"border px-2 py-1\">User</th>\r\n-            <th className=\"border px-2 py-1\">Type</th>\r\n-            <th className=\"border px-2 py-1\">Game</th>\r\n-            <th className=\"border px-2 py-1\">Amount</th>\r\n-            <th className=\"border px-2 py-1\">Date</th>\r\n-          </tr>\r\n-        </thead>\r\n-        <tbody>\r\n-          {transactions.map(t => (\r\n-            <tr key={t._id}>\r\n-              <td className=\"border px-2 py-1\">{t.userId?.username}</td>\r\n-              <td className=\"border px-2 py-1\">{t.type}</td>\r\n-              <td className=\"border px-2 py-1\">{t.game}</td>\r\n-              <td className=\"border px-2 py-1\">${t.amount}</td>\r\n-              <td className=\"border px-2 py-1\">{new Date(t.createdAt).toLocaleString()}</td>\r\n+\r\n+      <button\r\n+        onClick={handleFilterSubmit}\r\n+        className=\"mb-6 bg-green-500 hover:bg-green-600 text-white px-6 py-2 rounded-lg transition\"\r\n+      >\r\n+        Apply Filters\r\n+      </button>\r\n+\r\n+      <div className=\"overflow-x-auto\">\r\n+        <table className=\"min-w-full bg-white rounded-lg shadow-md overflow-hidden\">\r\n+          <thead>\r\n+            <tr className=\"bg-gray-100 text-gray-700 text-left\">\r\n+              <th className=\"px-4 py-3\">User</th>\r\n+              <th className=\"px-4 py-3\">Type</th>\r\n+              <th className=\"px-4 py-3\">Game</th>\r\n+              <th className=\"px-4 py-3\">Amount</th>\r\n+              <th className=\"px-4 py-3\">Date</th>\r\n             </tr>\r\n-          ))}\r\n-        </tbody>\r\n-      </table>\r\n+          </thead>\r\n+          <tbody>\r\n+            {transactions.map((t, idx) => (\r\n+              <tr key={t._id} className={idx % 2 === 0 ? \"bg-gray-50\" : \"\"}>\r\n+                <td className=\"px-4 py-2\">{t.userId?.username || \"-\"}</td>\r\n+                <td className=\"px-4 py-2 capitalize\">{t.type}</td>\r\n+                <td className=\"px-4 py-2\">{t.game || \"-\"}</td>\r\n+                <td className=\"px-4 py-2 text-green-600\">${t.amount}</td>\r\n+                <td className=\"px-4 py-2\">{new Date(t.createdAt).toLocaleString()}</td>\r\n+              </tr>\r\n+            ))}\r\n+          </tbody>\r\n+        </table>\r\n+      </div>\r\n     </AdminLayout>\r\n   );\r\n };\r\n \r\n-export default Transactions;\n+export default Transactions;\r\n"
                }
            ],
            "date": 1751537644713,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nimport AdminLayout from \"../components/AdminLayout\";\r\n\r\nconst Transactions = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [filter, setFilter] = useState({ userId: \"\", type: \"\", minAmount: \"\", maxAmount: \"\", startDate: \"\", endDate: \"\" });\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const fetchTransactions = async () => {\r\n    const params = new URLSearchParams();\r\n    Object.entries(filter).forEach(([k, v]) => v && params.append(k, v));\r\n    const res = await fetch(`${import.meta.env.VITE_AUTH_API_URL}/admin/transactions?${params.toString()}`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    const data = await res.json();\r\n    setTransactions(data.transactions || []);\r\n  };\r\n\r\n  useEffect(() => { fetchTransactions(); }, []);\r\n\r\n  const handleFilterChange = e => setFilter({ ...filter, [e.target.name]: e.target.value });\r\n  const handleFilterSubmit = e => { e.preventDefault(); fetchTransactions(); };\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <h1 className=\"text-2xl font-bold mb-4\">Transactions</h1>\r\n      <form className=\"flex flex-wrap gap-4 mb-4\" onSubmit={handleFilterSubmit}>\r\n        <input name=\"userId\" placeholder=\"User ID\" value={filter.userId} onChange={handleFilterChange} className=\"border p-2 rounded\" />\r\n        <select name=\"type\" value={filter.type} onChange={handleFilterChange} className=\"border p-2 rounded\">\r\n          <option value=\"\">All Types</option>\r\n          <option value=\"deposit\">Deposit</option>\r\n          <option value=\"redemption\">Redemption</option>\r\n          <option value=\"gameplay\">Gameplay</option>\r\n        </select>\r\n        <input name=\"minAmount\" type=\"number\" placeholder=\"Min Amount\" value={filter.minAmount} onChange={handleFilterChange} className=\"border p-2 rounded w-32\" />\r\n        <input name=\"maxAmount\" type=\"number\" placeholder=\"Max Amount\" value={filter.maxAmount} onChange={handleFilterChange} className=\"border p-2 rounded w-32\" />\r\n        <input name=\"startDate\" type=\"date\" value={filter.startDate} onChange={handleFilterChange} className=\"border p-2 rounded\" />\r\n        <input name=\"endDate\" type=\"date\" value={filter.endDate} onChange={handleFilterChange} className=\"border p-2 rounded\" />\r\n        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">Filter</button>\r\n      </form>\r\n      <table className=\"w-full border\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"border px-2 py-1\">User</th>\r\n            <th className=\"border px-2 py-1\">Type</th>\r\n            <th className=\"border px-2 py-1\">Game</th>\r\n            <th className=\"border px-2 py-1\">Amount</th>\r\n            <th className=\"border px-2 py-1\">Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {transactions.map(t => (\r\n            <tr key={t._id}>\r\n              <td className=\"border px-2 py-1\">{t.userId?.username}</td>\r\n              <td className=\"border px-2 py-1\">{t.type}</td>\r\n              <td className=\"border px-2 py-1\">{t.game}</td>\r\n              <td className=\"border px-2 py-1\">${t.amount}</td>\r\n              <td className=\"border px-2 py-1\">{new Date(t.createdAt).toLocaleString()}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default Transactions;"
        }
    ]
}