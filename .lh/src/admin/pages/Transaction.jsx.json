{
    "sourceFile": "src/admin/pages/Transaction.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1751537644713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1751537644713,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\nimport AdminLayout from \"../components/AdminLayout\";\r\n\r\nconst Transactions = () => {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [filter, setFilter] = useState({ userId: \"\", type: \"\", minAmount: \"\", maxAmount: \"\", startDate: \"\", endDate: \"\" });\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const fetchTransactions = async () => {\r\n    const params = new URLSearchParams();\r\n    Object.entries(filter).forEach(([k, v]) => v && params.append(k, v));\r\n    const res = await fetch(`${import.meta.env.VITE_AUTH_API_URL}/admin/transactions?${params.toString()}`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    const data = await res.json();\r\n    setTransactions(data.transactions || []);\r\n  };\r\n\r\n  useEffect(() => { fetchTransactions(); }, []);\r\n\r\n  const handleFilterChange = e => setFilter({ ...filter, [e.target.name]: e.target.value });\r\n  const handleFilterSubmit = e => { e.preventDefault(); fetchTransactions(); };\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <h1 className=\"text-2xl font-bold mb-4\">Transactions</h1>\r\n      <form className=\"flex flex-wrap gap-4 mb-4\" onSubmit={handleFilterSubmit}>\r\n        <input name=\"userId\" placeholder=\"User ID\" value={filter.userId} onChange={handleFilterChange} className=\"border p-2 rounded\" />\r\n        <select name=\"type\" value={filter.type} onChange={handleFilterChange} className=\"border p-2 rounded\">\r\n          <option value=\"\">All Types</option>\r\n          <option value=\"deposit\">Deposit</option>\r\n          <option value=\"redemption\">Redemption</option>\r\n          <option value=\"gameplay\">Gameplay</option>\r\n        </select>\r\n        <input name=\"minAmount\" type=\"number\" placeholder=\"Min Amount\" value={filter.minAmount} onChange={handleFilterChange} className=\"border p-2 rounded w-32\" />\r\n        <input name=\"maxAmount\" type=\"number\" placeholder=\"Max Amount\" value={filter.maxAmount} onChange={handleFilterChange} className=\"border p-2 rounded w-32\" />\r\n        <input name=\"startDate\" type=\"date\" value={filter.startDate} onChange={handleFilterChange} className=\"border p-2 rounded\" />\r\n        <input name=\"endDate\" type=\"date\" value={filter.endDate} onChange={handleFilterChange} className=\"border p-2 rounded\" />\r\n        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">Filter</button>\r\n      </form>\r\n      <table className=\"w-full border\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"border px-2 py-1\">User</th>\r\n            <th className=\"border px-2 py-1\">Type</th>\r\n            <th className=\"border px-2 py-1\">Game</th>\r\n            <th className=\"border px-2 py-1\">Amount</th>\r\n            <th className=\"border px-2 py-1\">Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {transactions.map(t => (\r\n            <tr key={t._id}>\r\n              <td className=\"border px-2 py-1\">{t.userId?.username}</td>\r\n              <td className=\"border px-2 py-1\">{t.type}</td>\r\n              <td className=\"border px-2 py-1\">{t.game}</td>\r\n              <td className=\"border px-2 py-1\">${t.amount}</td>\r\n              <td className=\"border px-2 py-1\">{new Date(t.createdAt).toLocaleString()}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default Transactions;"
        }
    ]
}