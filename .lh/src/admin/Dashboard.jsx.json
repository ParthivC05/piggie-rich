{
    "sourceFile": "src/admin/Dashboard.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1751515262642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1751515262642,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from \"react\";\r\n\r\nconst AdminDashboard = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [deposits, setDeposits] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) return;\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const [usersRes, depositsRes] = await Promise.all([\r\n          fetch(`${import.meta.env.VITE_AUTH_API_URL}/admin/users`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }),\r\n          fetch(`${import.meta.env.VITE_AUTH_API_URL}/admin/deposits`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }),\r\n        ]);\r\n        const usersData = await usersRes.json();\r\n        const depositsData = await depositsRes.json();\r\n        setUsers(usersData.users || []);\r\n        setDeposits(depositsData.deposits || []);\r\n      } catch (err) {\r\n        // handle error\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) return <div className=\"p-8\">Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"p-8\">\r\n      <h1 className=\"text-2xl font-bold mb-6\">Admin Dashboard</h1>\r\n      <h2 className=\"text-xl font-semibold mb-2\">Users</h2>\r\n      <table className=\"mb-8 w-full border\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"border px-2 py-1\">Username</th>\r\n            <th className=\"border px-2 py-1\">Email</th>\r\n            <th className=\"border px-2 py-1\">Role</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((u) => (\r\n            <tr key={u._id}>\r\n              <td className=\"border px-2 py-1\">{u.username}</td>\r\n              <td className=\"border px-2 py-1\">{u.email}</td>\r\n              <td className=\"border px-2 py-1\">{u.role}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <h2 className=\"text-xl font-semibold mb-2\">Deposits</h2>\r\n      <table className=\"w-full border\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"border px-2 py-1\">User</th>\r\n            <th className=\"border px-2 py-1\">Email</th>\r\n            <th className=\"border px-2 py-1\">Game</th>\r\n            <th className=\"border px-2 py-1\">Amount</th>\r\n            <th className=\"border px-2 py-1\">Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {deposits.map((d) => (\r\n            <tr key={d._id}>\r\n              <td className=\"border px-2 py-1\">{d.userId?.username}</td>\r\n              <td className=\"border px-2 py-1\">{d.userId?.email}</td>\r\n              <td className=\"border px-2 py-1\">{d.game}</td>\r\n              <td className=\"border px-2 py-1\">${d.amount}</td>\r\n              <td className=\"border px-2 py-1\">{new Date(d.createdAt).toLocaleString()}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"
        }
    ]
}